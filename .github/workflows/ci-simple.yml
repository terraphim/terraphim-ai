name: CI Simple (Debugging - DISABLED)

# Disabled: Replaced by comprehensive ci-native.yml workflow
# on:
#   push:
#     branches: [main]
#   pull_request:
#     types: [opened, synchronize, reopened]
#   workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ci-simple-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: desktop/yarn.lock

      - name: Install frontend dependencies
        working-directory: desktop
        run: yarn install --frozen-lockfile

      - name: Build frontend (skip linting)
        working-directory: desktop
        run: |
          echo "Building frontend..."
          yarn run build

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: desktop/dist
          retention-days: 7

  test-rust:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            pkg-config \
            build-essential

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.0
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: terraphim_server/dist

      - name: Run cargo fmt check
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings || echo "Clippy warnings found"

      - name: Build terraphim_server
        run: cargo build --package terraphim_server

      - name: Run basic tests
        run: cargo test --workspace --lib

  summary:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-rust]
    if: always()

    steps:
      - name: Generate build summary
        run: |
          echo "## Simple CI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Build | ${{ needs.test-frontend.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Rust Build | ${{ needs.test-rust.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status: Simplified CI for debugging**" >> $GITHUB_STEP_SUMMARY
