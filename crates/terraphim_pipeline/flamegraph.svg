<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="757.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="757.00"> </text><svg id="frames" x="10" width="1180"><g><title>OPENSSL_sk_pop_free (1 samples, 0.29%)</title><rect x="1.1696%" y="677" width="0.2924%" height="15" fill="rgb(227,0,7)"/><text x="1.4196%" y="687.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="1.4620%" y="677" width="0.8772%" height="15" fill="rgb(217,0,24)"/><text x="1.7120%" y="687.50"></text></g><g><title>_ZN4core3ptr57drop_in_place$LT$reqwest..async_impl..client..Pending$GT$17h91a55d557c3b7f93E.llvm.9463333993728484482 (1 samples, 0.29%)</title><rect x="2.3392%" y="677" width="0.2924%" height="15" fill="rgb(221,193,54)"/><text x="2.5892%" y="687.50"></text></g><g><title>[anon] (6 samples, 1.75%)</title><rect x="1.1696%" y="693" width="1.7544%" height="15" fill="rgb(248,212,6)"/><text x="1.4196%" y="703.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="2.6316%" y="677" width="0.2924%" height="15" fill="rgb(208,68,35)"/><text x="2.8816%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (1 samples, 0.29%)</title><rect x="4.6784%" y="581" width="0.2924%" height="15" fill="rgb(232,128,0)"/><text x="4.9284%" y="591.50"></text></g><g><title>&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (1 samples, 0.29%)</title><rect x="4.6784%" y="565" width="0.2924%" height="15" fill="rgb(207,160,47)"/><text x="4.9284%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::shutdown (1 samples, 0.29%)</title><rect x="4.6784%" y="549" width="0.2924%" height="15" fill="rgb(228,23,34)"/><text x="4.9284%" y="559.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.29%)</title><rect x="4.6784%" y="533" width="0.2924%" height="15" fill="rgb(218,30,26)"/><text x="4.9284%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::shutdown2 (1 samples, 0.29%)</title><rect x="4.6784%" y="517" width="0.2924%" height="15" fill="rgb(220,122,19)"/><text x="4.9284%" y="527.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (1 samples, 0.29%)</title><rect x="4.6784%" y="501" width="0.2924%" height="15" fill="rgb(250,228,42)"/><text x="4.9284%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (1 samples, 0.29%)</title><rect x="4.6784%" y="485" width="0.2924%" height="15" fill="rgb(240,193,28)"/><text x="4.9284%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.29%)</title><rect x="4.6784%" y="469" width="0.2924%" height="15" fill="rgb(216,20,37)"/><text x="4.9284%" y="479.50"></text></g><g><title>_ZN4core3ptr681drop_in_place$LT$futures_util..future..future..Map$LT$futures_util..future..try_future..MapErr$LT$hyper..client..conn..Connection$LT$reqwest..connect..Conn$C$reqwest..async_impl..body..ImplStream$GT$$C$hyper..client..client..Client$LT$reqwest..connect..Connector$C$reqwest..async_impl..body..ImplStream$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$hyper..client..client..Client$LT$reqwest..connect..Connector$C$reqwest..async_impl..body..ImplStream$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hf26d7b80fba7878dE.llvm.9463333993728484482 (1 samples, 0.29%)</title><rect x="4.6784%" y="453" width="0.2924%" height="15" fill="rgb(206,188,39)"/><text x="4.9284%" y="463.50"></text></g><g><title>_ZN4core3ptr111drop_in_place$LT$reqwest..connect..native_tls_conn..NativeTlsConn$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$17h1fac02150eccba29E.llvm.14967844144416520510 (1 samples, 0.29%)</title><rect x="4.6784%" y="437" width="0.2924%" height="15" fill="rgb(217,207,13)"/><text x="4.9284%" y="447.50"></text></g><g><title>SSL_free (1 samples, 0.29%)</title><rect x="4.6784%" y="421" width="0.2924%" height="15" fill="rgb(231,73,38)"/><text x="4.9284%" y="431.50"></text></g><g><title>SSL_CTX_free (1 samples, 0.29%)</title><rect x="4.6784%" y="405" width="0.2924%" height="15" fill="rgb(225,20,46)"/><text x="4.9284%" y="415.50"></text></g><g><title>X509_STORE_free (1 samples, 0.29%)</title><rect x="4.6784%" y="389" width="0.2924%" height="15" fill="rgb(210,31,41)"/><text x="4.9284%" y="399.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.29%)</title><rect x="4.6784%" y="373" width="0.2924%" height="15" fill="rgb(221,200,47)"/><text x="4.9284%" y="383.50"></text></g><g><title>X509_OBJECT_free (1 samples, 0.29%)</title><rect x="4.6784%" y="357" width="0.2924%" height="15" fill="rgb(226,26,5)"/><text x="4.9284%" y="367.50"></text></g><g><title>ASN1_item_free (1 samples, 0.29%)</title><rect x="4.6784%" y="341" width="0.2924%" height="15" fill="rgb(249,33,26)"/><text x="4.9284%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="325" width="0.2924%" height="15" fill="rgb(235,183,28)"/><text x="4.9284%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="309" width="0.2924%" height="15" fill="rgb(221,5,38)"/><text x="4.9284%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="293" width="0.2924%" height="15" fill="rgb(247,18,42)"/><text x="4.9284%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="277" width="0.2924%" height="15" fill="rgb(241,131,45)"/><text x="4.9284%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="261" width="0.2924%" height="15" fill="rgb(249,31,29)"/><text x="4.9284%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="245" width="0.2924%" height="15" fill="rgb(225,111,53)"/><text x="4.9284%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="4.6784%" y="229" width="0.2924%" height="15" fill="rgb(238,160,17)"/><text x="4.9284%" y="239.50"></text></g><g><title>_ZN5tokio7runtime2io6Driver4turn17h0158b986df8e11e1E.llvm.6324419416963057173 (5 samples, 1.46%)</title><rect x="4.9708%" y="469" width="1.4620%" height="15" fill="rgb(214,148,48)"/><text x="5.2208%" y="479.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (5 samples, 1.46%)</title><rect x="4.9708%" y="453" width="1.4620%" height="15" fill="rgb(232,36,49)"/><text x="5.2208%" y="463.50"></text></g><g><title>epoll_wait (5 samples, 1.46%)</title><rect x="4.9708%" y="437" width="1.4620%" height="15" fill="rgb(209,103,24)"/><text x="5.2208%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (6 samples, 1.75%)</title><rect x="4.9708%" y="549" width="1.7544%" height="15" fill="rgb(229,88,8)"/><text x="5.2208%" y="559.50"></text></g><g><title>tokio::runtime::context::set_scheduler (6 samples, 1.75%)</title><rect x="4.9708%" y="533" width="1.7544%" height="15" fill="rgb(213,181,19)"/><text x="5.2208%" y="543.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (6 samples, 1.75%)</title><rect x="4.9708%" y="517" width="1.7544%" height="15" fill="rgb(254,191,54)"/><text x="5.2208%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (6 samples, 1.75%)</title><rect x="4.9708%" y="501" width="1.7544%" height="15" fill="rgb(241,83,37)"/><text x="5.2208%" y="511.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h0135d80de780a1cbE.llvm.15279771343987165752 (6 samples, 1.75%)</title><rect x="4.9708%" y="485" width="1.7544%" height="15" fill="rgb(233,36,39)"/><text x="5.2208%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.29%)</title><rect x="6.4327%" y="469" width="0.2924%" height="15" fill="rgb(226,3,54)"/><text x="6.6827%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.29%)</title><rect x="6.4327%" y="453" width="0.2924%" height="15" fill="rgb(245,192,40)"/><text x="6.6827%" y="463.50"></text></g><g><title>[libc.so.6] (14 samples, 4.09%)</title><rect x="2.9240%" y="693" width="4.0936%" height="15" fill="rgb(238,167,29)"/><text x="3.1740%" y="703.50">[lib..</text></g><g><title>[libc.so.6] (8 samples, 2.34%)</title><rect x="4.6784%" y="677" width="2.3392%" height="15" fill="rgb(232,182,51)"/><text x="4.9284%" y="687.50">[..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 2.34%)</title><rect x="4.6784%" y="661" width="2.3392%" height="15" fill="rgb(231,60,39)"/><text x="4.9284%" y="671.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 2.34%)</title><rect x="4.6784%" y="645" width="2.3392%" height="15" fill="rgb(208,69,12)"/><text x="4.9284%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 2.34%)</title><rect x="4.6784%" y="629" width="2.3392%" height="15" fill="rgb(235,93,37)"/><text x="4.9284%" y="639.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 2.34%)</title><rect x="4.6784%" y="613" width="2.3392%" height="15" fill="rgb(213,116,39)"/><text x="4.9284%" y="623.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 2.34%)</title><rect x="4.6784%" y="597" width="2.3392%" height="15" fill="rgb(222,207,29)"/><text x="4.9284%" y="607.50">s..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (7 samples, 2.05%)</title><rect x="4.9708%" y="581" width="2.0468%" height="15" fill="rgb(206,96,30)"/><text x="5.2208%" y="591.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (7 samples, 2.05%)</title><rect x="4.9708%" y="565" width="2.0468%" height="15" fill="rgb(218,138,4)"/><text x="5.2208%" y="575.50">t..</text></g><g><title>tokio::util::rand::rt::&lt;impl tokio::util::rand::FastRand&gt;::replace_seed (1 samples, 0.29%)</title><rect x="6.7251%" y="549" width="0.2924%" height="15" fill="rgb(250,191,14)"/><text x="6.9751%" y="559.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.58%)</title><rect x="7.0175%" y="677" width="0.5848%" height="15" fill="rgb(239,60,40)"/><text x="7.2675%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="7.6023%" y="677" width="0.2924%" height="15" fill="rgb(206,27,48)"/><text x="7.8523%" y="687.50"></text></g><g><title>[libcrypto.so.3] (4 samples, 1.17%)</title><rect x="7.0175%" y="693" width="1.1696%" height="15" fill="rgb(225,35,8)"/><text x="7.2675%" y="703.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="7.8947%" y="677" width="0.2924%" height="15" fill="rgb(250,213,24)"/><text x="8.1447%" y="687.50"></text></g><g><title>[terraphim_pipeline] (1 samples, 0.29%)</title><rect x="8.1871%" y="693" width="0.2924%" height="15" fill="rgb(247,123,22)"/><text x="8.4371%" y="703.50"></text></g><g><title>_ZN5tokio7runtime4task5waker11clone_waker17h12545865fd0d1ef5E.llvm.3266232348153278685 (1 samples, 0.29%)</title><rect x="8.1871%" y="677" width="0.2924%" height="15" fill="rgb(231,138,38)"/><text x="8.4371%" y="687.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="8.4795%" y="677" width="0.2924%" height="15" fill="rgb(231,145,46)"/><text x="8.7295%" y="687.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="8.4795%" y="661" width="0.2924%" height="15" fill="rgb(251,118,11)"/><text x="8.7295%" y="671.50"></text></g><g><title>reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.29%)</title><rect x="8.4795%" y="645" width="0.2924%" height="15" fill="rgb(217,147,25)"/><text x="8.7295%" y="655.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.29%)</title><rect x="8.4795%" y="629" width="0.2924%" height="15" fill="rgb(247,81,37)"/><text x="8.7295%" y="639.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.29%)</title><rect x="8.4795%" y="613" width="0.2924%" height="15" fill="rgb(209,12,38)"/><text x="8.7295%" y="623.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="8.4795%" y="597" width="0.2924%" height="15" fill="rgb(227,1,9)"/><text x="8.7295%" y="607.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (1 samples, 0.29%)</title><rect x="8.4795%" y="581" width="0.2924%" height="15" fill="rgb(248,47,43)"/><text x="8.7295%" y="591.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="565" width="0.2924%" height="15" fill="rgb(221,10,30)"/><text x="8.7295%" y="575.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="549" width="0.2924%" height="15" fill="rgb(210,229,1)"/><text x="8.7295%" y="559.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="533" width="0.2924%" height="15" fill="rgb(222,148,37)"/><text x="8.7295%" y="543.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.29%)</title><rect x="8.4795%" y="517" width="0.2924%" height="15" fill="rgb(234,67,33)"/><text x="8.7295%" y="527.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="501" width="0.2924%" height="15" fill="rgb(247,98,35)"/><text x="8.7295%" y="511.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="485" width="0.2924%" height="15" fill="rgb(247,138,52)"/><text x="8.7295%" y="495.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="469" width="0.2924%" height="15" fill="rgb(213,79,30)"/><text x="8.7295%" y="479.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="453" width="0.2924%" height="15" fill="rgb(246,177,23)"/><text x="8.7295%" y="463.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="437" width="0.2924%" height="15" fill="rgb(230,62,27)"/><text x="8.7295%" y="447.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="421" width="0.2924%" height="15" fill="rgb(216,154,8)"/><text x="8.7295%" y="431.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (1 samples, 0.29%)</title><rect x="8.4795%" y="405" width="0.2924%" height="15" fill="rgb(244,35,45)"/><text x="8.7295%" y="415.50"></text></g><g><title>OSSL_DECODER_do_all_provided (1 samples, 0.29%)</title><rect x="8.4795%" y="389" width="0.2924%" height="15" fill="rgb(251,115,12)"/><text x="8.7295%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="373" width="0.2924%" height="15" fill="rgb(240,54,50)"/><text x="8.7295%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="357" width="0.2924%" height="15" fill="rgb(233,84,52)"/><text x="8.7295%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="341" width="0.2924%" height="15" fill="rgb(207,117,47)"/><text x="8.7295%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="325" width="0.2924%" height="15" fill="rgb(249,43,39)"/><text x="8.7295%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="309" width="0.2924%" height="15" fill="rgb(209,38,44)"/><text x="8.7295%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="293" width="0.2924%" height="15" fill="rgb(236,212,23)"/><text x="8.7295%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="277" width="0.2924%" height="15" fill="rgb(242,79,21)"/><text x="8.7295%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="261" width="0.2924%" height="15" fill="rgb(211,96,35)"/><text x="8.7295%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="245" width="0.2924%" height="15" fill="rgb(253,215,40)"/><text x="8.7295%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="229" width="0.2924%" height="15" fill="rgb(211,81,21)"/><text x="8.7295%" y="239.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.29%)</title><rect x="8.4795%" y="213" width="0.2924%" height="15" fill="rgb(208,190,38)"/><text x="8.7295%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.4795%" y="197" width="0.2924%" height="15" fill="rgb(235,213,38)"/><text x="8.7295%" y="207.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (1 samples, 0.29%)</title><rect x="8.7719%" y="357" width="0.2924%" height="15" fill="rgb(237,122,38)"/><text x="9.0219%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.7719%" y="341" width="0.2924%" height="15" fill="rgb(244,218,35)"/><text x="9.0219%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="8.7719%" y="325" width="0.2924%" height="15" fill="rgb(240,68,47)"/><text x="9.0219%" y="335.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="8.7719%" y="677" width="0.5848%" height="15" fill="rgb(210,16,53)"/><text x="9.0219%" y="687.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="8.7719%" y="661" width="0.5848%" height="15" fill="rgb(235,124,12)"/><text x="9.0219%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="8.7719%" y="645" width="0.5848%" height="15" fill="rgb(224,169,11)"/><text x="9.0219%" y="655.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="8.7719%" y="629" width="0.5848%" height="15" fill="rgb(250,166,2)"/><text x="9.0219%" y="639.50"></text></g><g><title>reqwest::connect::with_timeout::_{{closure}} (2 samples, 0.58%)</title><rect x="8.7719%" y="613" width="0.5848%" height="15" fill="rgb(242,216,29)"/><text x="9.0219%" y="623.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (2 samples, 0.58%)</title><rect x="8.7719%" y="597" width="0.5848%" height="15" fill="rgb(230,116,27)"/><text x="9.0219%" y="607.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (2 samples, 0.58%)</title><rect x="8.7719%" y="581" width="0.5848%" height="15" fill="rgb(228,99,48)"/><text x="9.0219%" y="591.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="8.7719%" y="565" width="0.5848%" height="15" fill="rgb(253,11,6)"/><text x="9.0219%" y="575.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (2 samples, 0.58%)</title><rect x="8.7719%" y="549" width="0.5848%" height="15" fill="rgb(247,143,39)"/><text x="9.0219%" y="559.50"></text></g><g><title>[libssl.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="533" width="0.5848%" height="15" fill="rgb(236,97,10)"/><text x="9.0219%" y="543.50"></text></g><g><title>[libssl.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="517" width="0.5848%" height="15" fill="rgb(233,208,19)"/><text x="9.0219%" y="527.50"></text></g><g><title>[libssl.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="501" width="0.5848%" height="15" fill="rgb(216,164,2)"/><text x="9.0219%" y="511.50"></text></g><g><title>ASN1_item_d2i_ex (2 samples, 0.58%)</title><rect x="8.7719%" y="485" width="0.5848%" height="15" fill="rgb(220,129,5)"/><text x="9.0219%" y="495.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="469" width="0.5848%" height="15" fill="rgb(242,17,10)"/><text x="9.0219%" y="479.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="453" width="0.5848%" height="15" fill="rgb(242,107,0)"/><text x="9.0219%" y="463.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="437" width="0.5848%" height="15" fill="rgb(251,28,31)"/><text x="9.0219%" y="447.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="421" width="0.5848%" height="15" fill="rgb(233,223,10)"/><text x="9.0219%" y="431.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="405" width="0.5848%" height="15" fill="rgb(215,21,27)"/><text x="9.0219%" y="415.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="8.7719%" y="389" width="0.5848%" height="15" fill="rgb(232,23,21)"/><text x="9.0219%" y="399.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (2 samples, 0.58%)</title><rect x="8.7719%" y="373" width="0.5848%" height="15" fill="rgb(244,5,23)"/><text x="9.0219%" y="383.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (1 samples, 0.29%)</title><rect x="9.0643%" y="357" width="0.2924%" height="15" fill="rgb(226,81,46)"/><text x="9.3143%" y="367.50"></text></g><g><title>OSSL_DECODER_is_a (1 samples, 0.29%)</title><rect x="9.0643%" y="341" width="0.2924%" height="15" fill="rgb(247,70,30)"/><text x="9.3143%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.0643%" y="325" width="0.2924%" height="15" fill="rgb(212,68,19)"/><text x="9.3143%" y="335.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.29%)</title><rect x="9.0643%" y="309" width="0.2924%" height="15" fill="rgb(240,187,13)"/><text x="9.3143%" y="319.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="9.0643%" y="293" width="0.2924%" height="15" fill="rgb(223,113,26)"/><text x="9.3143%" y="303.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.29%)</title><rect x="9.3567%" y="389" width="0.2924%" height="15" fill="rgb(206,192,2)"/><text x="9.6067%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.3567%" y="373" width="0.2924%" height="15" fill="rgb(241,108,4)"/><text x="9.6067%" y="383.50"></text></g><g><title>PEM_read_bio_ex (1 samples, 0.29%)</title><rect x="9.6491%" y="389" width="0.2924%" height="15" fill="rgb(247,173,49)"/><text x="9.8991%" y="399.50"></text></g><g><title>BIO_puts (1 samples, 0.29%)</title><rect x="9.6491%" y="373" width="0.2924%" height="15" fill="rgb(224,114,35)"/><text x="9.8991%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.6491%" y="357" width="0.2924%" height="15" fill="rgb(245,159,27)"/><text x="9.8991%" y="367.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.29%)</title><rect x="9.6491%" y="341" width="0.2924%" height="15" fill="rgb(245,172,44)"/><text x="9.8991%" y="351.50"></text></g><g><title>CRYPTO_clear_realloc (1 samples, 0.29%)</title><rect x="9.6491%" y="325" width="0.2924%" height="15" fill="rgb(236,23,11)"/><text x="9.8991%" y="335.50"></text></g><g><title>CRYPTO_clear_free (1 samples, 0.29%)</title><rect x="9.6491%" y="309" width="0.2924%" height="15" fill="rgb(205,117,38)"/><text x="9.8991%" y="319.50"></text></g><g><title>OPENSSL_cleanse (1 samples, 0.29%)</title><rect x="9.6491%" y="293" width="0.2924%" height="15" fill="rgb(237,72,25)"/><text x="9.8991%" y="303.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (3 samples, 0.88%)</title><rect x="9.3567%" y="405" width="0.8772%" height="15" fill="rgb(244,70,9)"/><text x="9.6067%" y="415.50"></text></g><g><title>X509_new_ex (1 samples, 0.29%)</title><rect x="9.9415%" y="389" width="0.2924%" height="15" fill="rgb(217,125,39)"/><text x="10.1915%" y="399.50"></text></g><g><title>ASN1_item_new_ex (1 samples, 0.29%)</title><rect x="9.9415%" y="373" width="0.2924%" height="15" fill="rgb(235,36,10)"/><text x="10.1915%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.9415%" y="357" width="0.2924%" height="15" fill="rgb(251,123,47)"/><text x="10.1915%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.9415%" y="341" width="0.2924%" height="15" fill="rgb(221,13,13)"/><text x="10.1915%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.9415%" y="325" width="0.2924%" height="15" fill="rgb(238,131,9)"/><text x="10.1915%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.9415%" y="309" width="0.2924%" height="15" fill="rgb(211,50,8)"/><text x="10.1915%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="9.9415%" y="293" width="0.2924%" height="15" fill="rgb(245,182,24)"/><text x="10.1915%" y="303.50"></text></g><g><title>X509_STORE_set_default_paths_ex (5 samples, 1.46%)</title><rect x="9.3567%" y="453" width="1.4620%" height="15" fill="rgb(242,14,37)"/><text x="9.6067%" y="463.50"></text></g><g><title>[libcrypto.so.3] (5 samples, 1.46%)</title><rect x="9.3567%" y="437" width="1.4620%" height="15" fill="rgb(246,228,12)"/><text x="9.6067%" y="447.50"></text></g><g><title>X509_load_cert_crl_file_ex (5 samples, 1.46%)</title><rect x="9.3567%" y="421" width="1.4620%" height="15" fill="rgb(213,55,15)"/><text x="9.6067%" y="431.50"></text></g><g><title>X509_STORE_add_cert (2 samples, 0.58%)</title><rect x="10.2339%" y="405" width="0.5848%" height="15" fill="rgb(209,9,3)"/><text x="10.4839%" y="415.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="10.2339%" y="389" width="0.5848%" height="15" fill="rgb(230,59,30)"/><text x="10.4839%" y="399.50"></text></g><g><title>X509_OBJECT_retrieve_match (2 samples, 0.58%)</title><rect x="10.2339%" y="373" width="0.5848%" height="15" fill="rgb(209,121,21)"/><text x="10.4839%" y="383.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="10.2339%" y="357" width="0.5848%" height="15" fill="rgb(220,109,13)"/><text x="10.4839%" y="367.50"></text></g><g><title>qsort_r (2 samples, 0.58%)</title><rect x="10.2339%" y="341" width="0.5848%" height="15" fill="rgb(232,18,1)"/><text x="10.4839%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="10.2339%" y="325" width="0.5848%" height="15" fill="rgb(215,41,42)"/><text x="10.4839%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="10.2339%" y="309" width="0.5848%" height="15" fill="rgb(224,123,36)"/><text x="10.4839%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="10.2339%" y="293" width="0.5848%" height="15" fill="rgb(240,125,3)"/><text x="10.4839%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="10.5263%" y="277" width="0.2924%" height="15" fill="rgb(205,98,50)"/><text x="10.7763%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="10.5263%" y="261" width="0.2924%" height="15" fill="rgb(205,185,37)"/><text x="10.7763%" y="271.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.29%)</title><rect x="10.8187%" y="437" width="0.2924%" height="15" fill="rgb(238,207,15)"/><text x="11.0687%" y="447.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="10.8187%" y="421" width="0.2924%" height="15" fill="rgb(213,199,42)"/><text x="11.0687%" y="431.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.29%)</title><rect x="10.8187%" y="405" width="0.2924%" height="15" fill="rgb(235,201,11)"/><text x="11.0687%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="10.8187%" y="389" width="0.2924%" height="15" fill="rgb(207,46,11)"/><text x="11.0687%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="10.8187%" y="373" width="0.2924%" height="15" fill="rgb(241,35,35)"/><text x="11.0687%" y="383.50"></text></g><g><title>OBJ_NAME_do_all (1 samples, 0.29%)</title><rect x="10.8187%" y="357" width="0.2924%" height="15" fill="rgb(243,32,47)"/><text x="11.0687%" y="367.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.29%)</title><rect x="10.8187%" y="341" width="0.2924%" height="15" fill="rgb(247,202,23)"/><text x="11.0687%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="10.8187%" y="325" width="0.2924%" height="15" fill="rgb(219,102,11)"/><text x="11.0687%" y="335.50"></text></g><g><title>OBJ_obj2txt (1 samples, 0.29%)</title><rect x="10.8187%" y="309" width="0.2924%" height="15" fill="rgb(243,110,44)"/><text x="11.0687%" y="319.50"></text></g><g><title>BIO_snprintf (1 samples, 0.29%)</title><rect x="10.8187%" y="293" width="0.2924%" height="15" fill="rgb(222,74,54)"/><text x="11.0687%" y="303.50"></text></g><g><title>BIO_vsnprintf (1 samples, 0.29%)</title><rect x="10.8187%" y="277" width="0.2924%" height="15" fill="rgb(216,99,12)"/><text x="11.0687%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="10.8187%" y="261" width="0.2924%" height="15" fill="rgb(226,22,26)"/><text x="11.0687%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 2.05%)</title><rect x="9.3567%" y="677" width="2.0468%" height="15" fill="rgb(217,163,10)"/><text x="9.6067%" y="687.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 2.05%)</title><rect x="9.3567%" y="661" width="2.0468%" height="15" fill="rgb(213,25,53)"/><text x="9.6067%" y="671.50">s..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (7 samples, 2.05%)</title><rect x="9.3567%" y="645" width="2.0468%" height="15" fill="rgb(252,105,26)"/><text x="9.6067%" y="655.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (7 samples, 2.05%)</title><rect x="9.3567%" y="629" width="2.0468%" height="15" fill="rgb(220,39,43)"/><text x="9.6067%" y="639.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (7 samples, 2.05%)</title><rect x="9.3567%" y="613" width="2.0468%" height="15" fill="rgb(229,68,48)"/><text x="9.6067%" y="623.50">t..</text></g><g><title>tokio::runtime::context::set_scheduler (7 samples, 2.05%)</title><rect x="9.3567%" y="597" width="2.0468%" height="15" fill="rgb(252,8,32)"/><text x="9.6067%" y="607.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (7 samples, 2.05%)</title><rect x="9.3567%" y="581" width="2.0468%" height="15" fill="rgb(223,20,43)"/><text x="9.6067%" y="591.50">t..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (7 samples, 2.05%)</title><rect x="9.3567%" y="565" width="2.0468%" height="15" fill="rgb(229,81,49)"/><text x="9.6067%" y="575.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 2.05%)</title><rect x="9.3567%" y="549" width="2.0468%" height="15" fill="rgb(236,28,36)"/><text x="9.6067%" y="559.50">&lt;..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (7 samples, 2.05%)</title><rect x="9.3567%" y="533" width="2.0468%" height="15" fill="rgb(249,185,26)"/><text x="9.6067%" y="543.50">r..</text></g><g><title>reqwest::connect::Connector::new_default_tls (7 samples, 2.05%)</title><rect x="9.3567%" y="517" width="2.0468%" height="15" fill="rgb(249,174,33)"/><text x="9.6067%" y="527.50">r..</text></g><g><title>native_tls::TlsConnectorBuilder::build (7 samples, 2.05%)</title><rect x="9.3567%" y="501" width="2.0468%" height="15" fill="rgb(233,201,37)"/><text x="9.6067%" y="511.50">n..</text></g><g><title>native_tls::imp::TlsConnector::new (7 samples, 2.05%)</title><rect x="9.3567%" y="485" width="2.0468%" height="15" fill="rgb(221,78,26)"/><text x="9.6067%" y="495.50">n..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (7 samples, 2.05%)</title><rect x="9.3567%" y="469" width="2.0468%" height="15" fill="rgb(250,127,30)"/><text x="9.6067%" y="479.50">o..</text></g><g><title>openssl::ssl::connector::ctx (2 samples, 0.58%)</title><rect x="10.8187%" y="453" width="0.5848%" height="15" fill="rgb(230,49,44)"/><text x="11.0687%" y="463.50"></text></g><g><title>openssl_sys::openssl::init (1 samples, 0.29%)</title><rect x="11.1111%" y="437" width="0.2924%" height="15" fill="rgb(229,67,23)"/><text x="11.3611%" y="447.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.29%)</title><rect x="11.1111%" y="421" width="0.2924%" height="15" fill="rgb(249,83,47)"/><text x="11.3611%" y="431.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.29%)</title><rect x="11.1111%" y="405" width="0.2924%" height="15" fill="rgb(215,43,3)"/><text x="11.3611%" y="415.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.29%)</title><rect x="11.1111%" y="389" width="0.2924%" height="15" fill="rgb(238,154,13)"/><text x="11.3611%" y="399.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.29%)</title><rect x="11.1111%" y="373" width="0.2924%" height="15" fill="rgb(219,56,2)"/><text x="11.3611%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="11.1111%" y="357" width="0.2924%" height="15" fill="rgb(233,0,4)"/><text x="11.3611%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="11.1111%" y="341" width="0.2924%" height="15" fill="rgb(235,30,7)"/><text x="11.3611%" y="351.50"></text></g><g><title>CONF_modules_load_file_ex (1 samples, 0.29%)</title><rect x="11.1111%" y="325" width="0.2924%" height="15" fill="rgb(250,79,13)"/><text x="11.3611%" y="335.50"></text></g><g><title>ERR_set_mark (1 samples, 0.29%)</title><rect x="11.1111%" y="309" width="0.2924%" height="15" fill="rgb(211,146,34)"/><text x="11.3611%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="11.1111%" y="293" width="0.2924%" height="15" fill="rgb(228,22,38)"/><text x="11.3611%" y="303.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.29%)</title><rect x="11.1111%" y="277" width="0.2924%" height="15" fill="rgb(235,168,5)"/><text x="11.3611%" y="287.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.29%)</title><rect x="11.1111%" y="261" width="0.2924%" height="15" fill="rgb(221,155,16)"/><text x="11.3611%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="11.1111%" y="245" width="0.2924%" height="15" fill="rgb(215,215,53)"/><text x="11.3611%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="11.1111%" y="229" width="0.2924%" height="15" fill="rgb(223,4,10)"/><text x="11.3611%" y="239.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.29%)</title><rect x="11.1111%" y="213" width="0.2924%" height="15" fill="rgb(234,103,6)"/><text x="11.3611%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="11.1111%" y="197" width="0.2924%" height="15" fill="rgb(227,97,0)"/><text x="11.3611%" y="207.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.29%)</title><rect x="11.1111%" y="181" width="0.2924%" height="15" fill="rgb(234,150,53)"/><text x="11.3611%" y="191.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.29%)</title><rect x="11.4035%" y="677" width="0.2924%" height="15" fill="rgb(228,201,54)"/><text x="11.6535%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.29%)</title><rect x="11.4035%" y="661" width="0.2924%" height="15" fill="rgb(222,22,37)"/><text x="11.6535%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.29%)</title><rect x="11.4035%" y="645" width="0.2924%" height="15" fill="rgb(237,53,32)"/><text x="11.6535%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.29%)</title><rect x="11.4035%" y="629" width="0.2924%" height="15" fill="rgb(233,25,53)"/><text x="11.6535%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.29%)</title><rect x="11.4035%" y="613" width="0.2924%" height="15" fill="rgb(210,40,34)"/><text x="11.6535%" y="623.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1 samples, 0.29%)</title><rect x="11.4035%" y="597" width="0.2924%" height="15" fill="rgb(241,220,44)"/><text x="11.6535%" y="607.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.29%)</title><rect x="11.4035%" y="581" width="0.2924%" height="15" fill="rgb(235,28,35)"/><text x="11.6535%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (1 samples, 0.29%)</title><rect x="11.4035%" y="565" width="0.2924%" height="15" fill="rgb(210,56,17)"/><text x="11.6535%" y="575.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.29%)</title><rect x="11.4035%" y="549" width="0.2924%" height="15" fill="rgb(224,130,29)"/><text x="11.6535%" y="559.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.29%)</title><rect x="11.4035%" y="533" width="0.2924%" height="15" fill="rgb(235,212,8)"/><text x="11.6535%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.29%)</title><rect x="11.4035%" y="517" width="0.2924%" height="15" fill="rgb(223,33,50)"/><text x="11.6535%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="11.4035%" y="501" width="0.2924%" height="15" fill="rgb(219,149,13)"/><text x="11.6535%" y="511.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (1 samples, 0.29%)</title><rect x="11.4035%" y="485" width="0.2924%" height="15" fill="rgb(250,156,29)"/><text x="11.6535%" y="495.50"></text></g><g><title>reqwest::connect::Connector::new_default_tls (1 samples, 0.29%)</title><rect x="11.4035%" y="469" width="0.2924%" height="15" fill="rgb(216,193,19)"/><text x="11.6535%" y="479.50"></text></g><g><title>native_tls::TlsConnectorBuilder::build (1 samples, 0.29%)</title><rect x="11.4035%" y="453" width="0.2924%" height="15" fill="rgb(216,135,14)"/><text x="11.6535%" y="463.50"></text></g><g><title>native_tls::imp::TlsConnector::new (1 samples, 0.29%)</title><rect x="11.4035%" y="437" width="0.2924%" height="15" fill="rgb(241,47,5)"/><text x="11.6535%" y="447.50"></text></g><g><title>openssl::ssl::connector::SslConnector::builder (1 samples, 0.29%)</title><rect x="11.4035%" y="421" width="0.2924%" height="15" fill="rgb(233,42,35)"/><text x="11.6535%" y="431.50"></text></g><g><title>X509_STORE_set_default_paths_ex (1 samples, 0.29%)</title><rect x="11.4035%" y="405" width="0.2924%" height="15" fill="rgb(231,13,6)"/><text x="11.6535%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="11.4035%" y="389" width="0.2924%" height="15" fill="rgb(207,181,40)"/><text x="11.6535%" y="399.50"></text></g><g><title>X509_load_cert_crl_file_ex (1 samples, 0.29%)</title><rect x="11.4035%" y="373" width="0.2924%" height="15" fill="rgb(254,173,49)"/><text x="11.6535%" y="383.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (1 samples, 0.29%)</title><rect x="11.4035%" y="357" width="0.2924%" height="15" fill="rgb(221,1,38)"/><text x="11.6535%" y="367.50"></text></g><g><title>PEM_read_bio_ex (1 samples, 0.29%)</title><rect x="11.4035%" y="341" width="0.2924%" height="15" fill="rgb(206,124,46)"/><text x="11.6535%" y="351.50"></text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.29%)</title><rect x="11.6959%" y="661" width="0.2924%" height="15" fill="rgb(249,21,11)"/><text x="11.9459%" y="671.50"></text></g><g><title>tokio::runtime::driver::Driver::new (1 samples, 0.29%)</title><rect x="11.6959%" y="645" width="0.2924%" height="15" fill="rgb(222,201,40)"/><text x="11.9459%" y="655.50"></text></g><g><title>tokio::runtime::io::Driver::new (1 samples, 0.29%)</title><rect x="11.6959%" y="629" width="0.2924%" height="15" fill="rgb(235,61,29)"/><text x="11.9459%" y="639.50"></text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::new (1 samples, 0.29%)</title><rect x="11.6959%" y="613" width="0.2924%" height="15" fill="rgb(219,207,3)"/><text x="11.9459%" y="623.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.29%)</title><rect x="11.6959%" y="597" width="0.2924%" height="15" fill="rgb(222,56,46)"/><text x="11.9459%" y="607.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="11.6959%" y="581" width="0.2924%" height="15" fill="rgb(239,76,54)"/><text x="11.9459%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="11.6959%" y="565" width="0.2924%" height="15" fill="rgb(231,124,27)"/><text x="11.9459%" y="575.50"></text></g><g><title>OPENSSL_sk_num (1 samples, 0.29%)</title><rect x="18.7135%" y="213" width="0.2924%" height="15" fill="rgb(249,195,6)"/><text x="18.9635%" y="223.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (25 samples, 7.31%)</title><rect x="11.9883%" y="277" width="7.3099%" height="15" fill="rgb(237,174,47)"/><text x="12.2383%" y="287.50">EVP_KEYMGM..</text></g><g><title>[libcrypto.so.3] (25 samples, 7.31%)</title><rect x="11.9883%" y="261" width="7.3099%" height="15" fill="rgb(206,201,31)"/><text x="12.2383%" y="271.50">[libcrypto..</text></g><g><title>[libcrypto.so.3] (25 samples, 7.31%)</title><rect x="11.9883%" y="245" width="7.3099%" height="15" fill="rgb(231,57,52)"/><text x="12.2383%" y="255.50">[libcrypto..</text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="18.7135%" y="229" width="0.5848%" height="15" fill="rgb(248,177,22)"/><text x="18.9635%" y="239.50"></text></g><g><title>OPENSSL_sk_value (1 samples, 0.29%)</title><rect x="19.0058%" y="213" width="0.2924%" height="15" fill="rgb(215,211,37)"/><text x="19.2558%" y="223.50"></text></g><g><title>EVP_KEYMGMT_is_a (2 samples, 0.58%)</title><rect x="19.2982%" y="277" width="0.5848%" height="15" fill="rgb(241,128,51)"/><text x="19.5482%" y="287.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="19.2982%" y="261" width="0.5848%" height="15" fill="rgb(227,165,31)"/><text x="19.5482%" y="271.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="19.2982%" y="245" width="0.5848%" height="15" fill="rgb(228,167,24)"/><text x="19.5482%" y="255.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.58%)</title><rect x="19.2982%" y="229" width="0.5848%" height="15" fill="rgb(228,143,12)"/><text x="19.5482%" y="239.50"></text></g><g><title>pthread_rwlock_rdlock (2 samples, 0.58%)</title><rect x="19.2982%" y="213" width="0.5848%" height="15" fill="rgb(249,149,8)"/><text x="19.5482%" y="223.50"></text></g><g><title>OSSL_DECODER_do_all_provided (1 samples, 0.29%)</title><rect x="20.1754%" y="261" width="0.2924%" height="15" fill="rgb(243,35,44)"/><text x="20.4254%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="20.1754%" y="245" width="0.2924%" height="15" fill="rgb(246,89,9)"/><text x="20.4254%" y="255.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.29%)</title><rect x="20.4678%" y="229" width="0.2924%" height="15" fill="rgb(233,213,13)"/><text x="20.7178%" y="239.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.29%)</title><rect x="20.4678%" y="213" width="0.2924%" height="15" fill="rgb(233,141,41)"/><text x="20.7178%" y="223.50"></text></g><g><title>CRYPTO_THREAD_read_lock (5 samples, 1.46%)</title><rect x="20.7602%" y="213" width="1.4620%" height="15" fill="rgb(239,167,4)"/><text x="21.0102%" y="223.50"></text></g><g><title>pthread_rwlock_rdlock (5 samples, 1.46%)</title><rect x="20.7602%" y="197" width="1.4620%" height="15" fill="rgb(209,217,16)"/><text x="21.0102%" y="207.50"></text></g><g><title>CRYPTO_THREAD_unlock (5 samples, 1.46%)</title><rect x="22.2222%" y="213" width="1.4620%" height="15" fill="rgb(219,88,35)"/><text x="22.4722%" y="223.50"></text></g><g><title>pthread_rwlock_unlock (5 samples, 1.46%)</title><rect x="22.2222%" y="197" width="1.4620%" height="15" fill="rgb(220,193,23)"/><text x="22.4722%" y="207.50"></text></g><g><title>CRYPTO_strndup (1 samples, 0.29%)</title><rect x="23.6842%" y="213" width="0.2924%" height="15" fill="rgb(230,90,52)"/><text x="23.9342%" y="223.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="23.6842%" y="197" width="0.2924%" height="15" fill="rgb(252,106,19)"/><text x="23.9342%" y="207.50"></text></g><g><title>OPENSSL_strcasecmp (1 samples, 0.29%)</title><rect x="26.0234%" y="181" width="0.2924%" height="15" fill="rgb(206,74,20)"/><text x="26.2734%" y="191.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (23 samples, 6.73%)</title><rect x="19.8830%" y="277" width="6.7251%" height="15" fill="rgb(230,138,44)"/><text x="20.1330%" y="287.50">OSSL_DECO..</text></g><g><title>OSSL_DECODER_is_a (21 samples, 6.14%)</title><rect x="20.4678%" y="261" width="6.1404%" height="15" fill="rgb(235,182,43)"/><text x="20.7178%" y="271.50">OSSL_DEC..</text></g><g><title>[libcrypto.so.3] (21 samples, 6.14%)</title><rect x="20.4678%" y="245" width="6.1404%" height="15" fill="rgb(242,16,51)"/><text x="20.7178%" y="255.50">[libcryp..</text></g><g><title>[libcrypto.so.3] (20 samples, 5.85%)</title><rect x="20.7602%" y="229" width="5.8480%" height="15" fill="rgb(248,9,4)"/><text x="21.0102%" y="239.50">[libcry..</text></g><g><title>OPENSSL_LH_retrieve (9 samples, 2.63%)</title><rect x="23.9766%" y="213" width="2.6316%" height="15" fill="rgb(210,31,22)"/><text x="24.2266%" y="223.50">OP..</text></g><g><title>[libcrypto.so.3] (7 samples, 2.05%)</title><rect x="24.5614%" y="197" width="2.0468%" height="15" fill="rgb(239,54,39)"/><text x="24.8114%" y="207.50">[..</text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="26.3158%" y="181" width="0.2924%" height="15" fill="rgb(230,99,41)"/><text x="26.5658%" y="191.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.29%)</title><rect x="27.4854%" y="181" width="0.2924%" height="15" fill="rgb(253,106,12)"/><text x="27.7354%" y="191.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.29%)</title><rect x="27.4854%" y="165" width="0.2924%" height="15" fill="rgb(213,46,41)"/><text x="27.7354%" y="175.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (57 samples, 16.67%)</title><rect x="11.9883%" y="293" width="16.6667%" height="15" fill="rgb(215,133,35)"/><text x="12.2383%" y="303.50">OSSL_DECODER_CTX_new_for_p..</text></g><g><title>OSSL_DECODER_do_all_provided (7 samples, 2.05%)</title><rect x="26.6082%" y="277" width="2.0468%" height="15" fill="rgb(213,28,5)"/><text x="26.8582%" y="287.50">O..</text></g><g><title>[libcrypto.so.3] (7 samples, 2.05%)</title><rect x="26.6082%" y="261" width="2.0468%" height="15" fill="rgb(215,77,49)"/><text x="26.8582%" y="271.50">[..</text></g><g><title>[libcrypto.so.3] (4 samples, 1.17%)</title><rect x="27.4854%" y="245" width="1.1696%" height="15" fill="rgb(248,100,22)"/><text x="27.7354%" y="255.50"></text></g><g><title>[libcrypto.so.3] (4 samples, 1.17%)</title><rect x="27.4854%" y="229" width="1.1696%" height="15" fill="rgb(208,67,9)"/><text x="27.7354%" y="239.50"></text></g><g><title>OSSL_DECODER_is_a (4 samples, 1.17%)</title><rect x="27.4854%" y="213" width="1.1696%" height="15" fill="rgb(219,133,21)"/><text x="27.7354%" y="223.50"></text></g><g><title>[libcrypto.so.3] (4 samples, 1.17%)</title><rect x="27.4854%" y="197" width="1.1696%" height="15" fill="rgb(246,46,29)"/><text x="27.7354%" y="207.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="27.7778%" y="181" width="0.8772%" height="15" fill="rgb(246,185,52)"/><text x="28.0278%" y="191.50"></text></g><g><title>OPENSSL_LH_retrieve (3 samples, 0.88%)</title><rect x="27.7778%" y="165" width="0.8772%" height="15" fill="rgb(252,136,11)"/><text x="28.0278%" y="175.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="27.7778%" y="149" width="0.8772%" height="15" fill="rgb(219,138,53)"/><text x="28.0278%" y="159.50"></text></g><g><title>OPENSSL_strcasecmp (1 samples, 0.29%)</title><rect x="28.3626%" y="133" width="0.2924%" height="15" fill="rgb(211,51,23)"/><text x="28.6126%" y="143.50"></text></g><g><title>X509_STORE_set_default_paths_ex (59 samples, 17.25%)</title><rect x="11.9883%" y="469" width="17.2515%" height="15" fill="rgb(247,221,28)"/><text x="12.2383%" y="479.50">X509_STORE_set_default_path..</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="453" width="17.2515%" height="15" fill="rgb(251,222,45)"/><text x="12.2383%" y="463.50">[libcrypto.so.3]</text></g><g><title>X509_load_cert_crl_file_ex (59 samples, 17.25%)</title><rect x="11.9883%" y="437" width="17.2515%" height="15" fill="rgb(217,162,53)"/><text x="12.2383%" y="447.50">X509_load_cert_crl_file_ex</text></g><g><title>PEM_X509_INFO_read_bio_ex (59 samples, 17.25%)</title><rect x="11.9883%" y="421" width="17.2515%" height="15" fill="rgb(229,93,14)"/><text x="12.2383%" y="431.50">PEM_X509_INFO_read_bio_ex</text></g><g><title>ASN1_item_d2i_ex (59 samples, 17.25%)</title><rect x="11.9883%" y="405" width="17.2515%" height="15" fill="rgb(209,67,49)"/><text x="12.2383%" y="415.50">ASN1_item_d2i_ex</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="389" width="17.2515%" height="15" fill="rgb(213,87,29)"/><text x="12.2383%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="373" width="17.2515%" height="15" fill="rgb(205,151,52)"/><text x="12.2383%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="357" width="17.2515%" height="15" fill="rgb(253,215,39)"/><text x="12.2383%" y="367.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="341" width="17.2515%" height="15" fill="rgb(221,220,41)"/><text x="12.2383%" y="351.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="325" width="17.2515%" height="15" fill="rgb(218,133,21)"/><text x="12.2383%" y="335.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (59 samples, 17.25%)</title><rect x="11.9883%" y="309" width="17.2515%" height="15" fill="rgb(221,193,43)"/><text x="12.2383%" y="319.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="28.6550%" y="293" width="0.5848%" height="15" fill="rgb(240,128,52)"/><text x="28.9050%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="28.9474%" y="277" width="0.2924%" height="15" fill="rgb(253,114,12)"/><text x="29.1974%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="28.9474%" y="261" width="0.2924%" height="15" fill="rgb(215,223,47)"/><text x="29.1974%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="28.9474%" y="245" width="0.2924%" height="15" fill="rgb(248,225,23)"/><text x="29.1974%" y="255.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.29%)</title><rect x="28.9474%" y="229" width="0.2924%" height="15" fill="rgb(250,108,0)"/><text x="29.1974%" y="239.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.29%)</title><rect x="28.9474%" y="213" width="0.2924%" height="15" fill="rgb(228,208,7)"/><text x="29.1974%" y="223.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 17.84%)</title><rect x="11.6959%" y="677" width="17.8363%" height="15" fill="rgb(244,45,10)"/><text x="11.9459%" y="687.50">std::sys_common::backtrace::..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (60 samples, 17.54%)</title><rect x="11.9883%" y="661" width="17.5439%" height="15" fill="rgb(207,125,25)"/><text x="12.2383%" y="671.50">tokio::runtime::runtime::Ru..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (60 samples, 17.54%)</title><rect x="11.9883%" y="645" width="17.5439%" height="15" fill="rgb(210,195,18)"/><text x="12.2383%" y="655.50">tokio::runtime::context::ru..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (60 samples, 17.54%)</title><rect x="11.9883%" y="629" width="17.5439%" height="15" fill="rgb(249,80,12)"/><text x="12.2383%" y="639.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::context::set_scheduler (60 samples, 17.54%)</title><rect x="11.9883%" y="613" width="17.5439%" height="15" fill="rgb(221,65,9)"/><text x="12.2383%" y="623.50">tokio::runtime::context::se..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (60 samples, 17.54%)</title><rect x="11.9883%" y="597" width="17.5439%" height="15" fill="rgb(235,49,36)"/><text x="12.2383%" y="607.50">tokio::runtime::context::sc..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (60 samples, 17.54%)</title><rect x="11.9883%" y="581" width="17.5439%" height="15" fill="rgb(225,32,20)"/><text x="12.2383%" y="591.50">tokio::runtime::scheduler::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (60 samples, 17.54%)</title><rect x="11.9883%" y="565" width="17.5439%" height="15" fill="rgb(215,141,46)"/><text x="12.2383%" y="575.50">&lt;core::pin::Pin&lt;P&gt; as core:..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (60 samples, 17.54%)</title><rect x="11.9883%" y="549" width="17.5439%" height="15" fill="rgb(250,160,47)"/><text x="12.2383%" y="559.50">reqwest::async_impl::client..</text></g><g><title>reqwest::connect::Connector::new_default_tls (60 samples, 17.54%)</title><rect x="11.9883%" y="533" width="17.5439%" height="15" fill="rgb(216,222,40)"/><text x="12.2383%" y="543.50">reqwest::connect::Connector..</text></g><g><title>native_tls::TlsConnectorBuilder::build (60 samples, 17.54%)</title><rect x="11.9883%" y="517" width="17.5439%" height="15" fill="rgb(234,217,39)"/><text x="12.2383%" y="527.50">native_tls::TlsConnectorBui..</text></g><g><title>native_tls::imp::TlsConnector::new (60 samples, 17.54%)</title><rect x="11.9883%" y="501" width="17.5439%" height="15" fill="rgb(207,178,40)"/><text x="12.2383%" y="511.50">native_tls::imp::TlsConnect..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (60 samples, 17.54%)</title><rect x="11.9883%" y="485" width="17.5439%" height="15" fill="rgb(221,136,13)"/><text x="12.2383%" y="495.50">openssl::ssl::connector::Ss..</text></g><g><title>openssl::ssl::connector::ctx (1 samples, 0.29%)</title><rect x="29.2398%" y="469" width="0.2924%" height="15" fill="rgb(249,199,10)"/><text x="29.4898%" y="479.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.29%)</title><rect x="29.2398%" y="453" width="0.2924%" height="15" fill="rgb(249,222,13)"/><text x="29.4898%" y="463.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="437" width="0.2924%" height="15" fill="rgb(244,185,38)"/><text x="29.4898%" y="447.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.29%)</title><rect x="29.2398%" y="421" width="0.2924%" height="15" fill="rgb(236,202,9)"/><text x="29.4898%" y="431.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="405" width="0.2924%" height="15" fill="rgb(250,229,37)"/><text x="29.4898%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="389" width="0.2924%" height="15" fill="rgb(206,174,23)"/><text x="29.4898%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="373" width="0.2924%" height="15" fill="rgb(211,33,43)"/><text x="29.4898%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="357" width="0.2924%" height="15" fill="rgb(245,58,50)"/><text x="29.4898%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="341" width="0.2924%" height="15" fill="rgb(244,68,36)"/><text x="29.4898%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="325" width="0.2924%" height="15" fill="rgb(232,229,15)"/><text x="29.4898%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="309" width="0.2924%" height="15" fill="rgb(254,30,23)"/><text x="29.4898%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.2398%" y="293" width="0.2924%" height="15" fill="rgb(235,160,14)"/><text x="29.4898%" y="303.50"></text></g><g><title>OSSL_PARAM_locate (1 samples, 0.29%)</title><rect x="29.2398%" y="277" width="0.2924%" height="15" fill="rgb(212,155,44)"/><text x="29.4898%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="29.2398%" y="261" width="0.2924%" height="15" fill="rgb(226,2,50)"/><text x="29.4898%" y="271.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1 samples, 0.29%)</title><rect x="29.5322%" y="677" width="0.2924%" height="15" fill="rgb(234,177,6)"/><text x="29.7822%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (1 samples, 0.29%)</title><rect x="29.5322%" y="661" width="0.2924%" height="15" fill="rgb(217,24,9)"/><text x="29.7822%" y="671.50"></text></g><g><title>tokio::runtime::context::set_scheduler (1 samples, 0.29%)</title><rect x="29.5322%" y="645" width="0.2924%" height="15" fill="rgb(220,13,46)"/><text x="29.7822%" y="655.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.29%)</title><rect x="29.5322%" y="629" width="0.2924%" height="15" fill="rgb(239,221,27)"/><text x="29.7822%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.29%)</title><rect x="29.5322%" y="613" width="0.2924%" height="15" fill="rgb(222,198,25)"/><text x="29.7822%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="29.5322%" y="597" width="0.2924%" height="15" fill="rgb(211,99,13)"/><text x="29.7822%" y="607.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (1 samples, 0.29%)</title><rect x="29.5322%" y="581" width="0.2924%" height="15" fill="rgb(232,111,31)"/><text x="29.7822%" y="591.50"></text></g><g><title>reqwest::connect::Connector::new_default_tls (1 samples, 0.29%)</title><rect x="29.5322%" y="565" width="0.2924%" height="15" fill="rgb(245,82,37)"/><text x="29.7822%" y="575.50"></text></g><g><title>native_tls::TlsConnectorBuilder::build (1 samples, 0.29%)</title><rect x="29.5322%" y="549" width="0.2924%" height="15" fill="rgb(227,149,46)"/><text x="29.7822%" y="559.50"></text></g><g><title>native_tls::imp::TlsConnector::new (1 samples, 0.29%)</title><rect x="29.5322%" y="533" width="0.2924%" height="15" fill="rgb(218,36,50)"/><text x="29.7822%" y="543.50"></text></g><g><title>openssl::ssl::connector::SslConnector::builder (1 samples, 0.29%)</title><rect x="29.5322%" y="517" width="0.2924%" height="15" fill="rgb(226,80,48)"/><text x="29.7822%" y="527.50"></text></g><g><title>X509_STORE_set_default_paths_ex (1 samples, 0.29%)</title><rect x="29.5322%" y="501" width="0.2924%" height="15" fill="rgb(238,224,15)"/><text x="29.7822%" y="511.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="485" width="0.2924%" height="15" fill="rgb(241,136,10)"/><text x="29.7822%" y="495.50"></text></g><g><title>X509_load_cert_crl_file_ex (1 samples, 0.29%)</title><rect x="29.5322%" y="469" width="0.2924%" height="15" fill="rgb(208,32,45)"/><text x="29.7822%" y="479.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (1 samples, 0.29%)</title><rect x="29.5322%" y="453" width="0.2924%" height="15" fill="rgb(207,135,9)"/><text x="29.7822%" y="463.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.29%)</title><rect x="29.5322%" y="437" width="0.2924%" height="15" fill="rgb(206,86,44)"/><text x="29.7822%" y="447.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="421" width="0.2924%" height="15" fill="rgb(245,177,15)"/><text x="29.7822%" y="431.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="405" width="0.2924%" height="15" fill="rgb(206,64,50)"/><text x="29.7822%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="389" width="0.2924%" height="15" fill="rgb(234,36,40)"/><text x="29.7822%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="373" width="0.2924%" height="15" fill="rgb(213,64,8)"/><text x="29.7822%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="357" width="0.2924%" height="15" fill="rgb(210,75,36)"/><text x="29.7822%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="341" width="0.2924%" height="15" fill="rgb(229,88,21)"/><text x="29.7822%" y="351.50"></text></g><g><title>OSSL_DECODER_from_data (1 samples, 0.29%)</title><rect x="29.5322%" y="325" width="0.2924%" height="15" fill="rgb(252,204,47)"/><text x="29.7822%" y="335.50"></text></g><g><title>OSSL_DECODER_from_bio (1 samples, 0.29%)</title><rect x="29.5322%" y="309" width="0.2924%" height="15" fill="rgb(208,77,27)"/><text x="29.7822%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="293" width="0.2924%" height="15" fill="rgb(221,76,26)"/><text x="29.7822%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="277" width="0.2924%" height="15" fill="rgb(225,139,18)"/><text x="29.7822%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="261" width="0.2924%" height="15" fill="rgb(230,137,11)"/><text x="29.7822%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="245" width="0.2924%" height="15" fill="rgb(212,28,1)"/><text x="29.7822%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="29.5322%" y="229" width="0.2924%" height="15" fill="rgb(248,164,17)"/><text x="29.7822%" y="239.50"></text></g><g><title>asn1_d2i_read_bio (1 samples, 0.29%)</title><rect x="29.5322%" y="213" width="0.2924%" height="15" fill="rgb(222,171,42)"/><text x="29.7822%" y="223.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.29%)</title><rect x="29.5322%" y="197" width="0.2924%" height="15" fill="rgb(243,84,45)"/><text x="29.7822%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="29.5322%" y="181" width="0.2924%" height="15" fill="rgb(252,49,23)"/><text x="29.7822%" y="191.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (3 samples, 0.88%)</title><rect x="29.8246%" y="677" width="0.8772%" height="15" fill="rgb(215,19,7)"/><text x="30.0746%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (3 samples, 0.88%)</title><rect x="29.8246%" y="661" width="0.8772%" height="15" fill="rgb(238,81,41)"/><text x="30.0746%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.88%)</title><rect x="29.8246%" y="645" width="0.8772%" height="15" fill="rgb(210,199,37)"/><text x="30.0746%" y="655.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (3 samples, 0.88%)</title><rect x="29.8246%" y="629" width="0.8772%" height="15" fill="rgb(244,192,49)"/><text x="30.0746%" y="639.50"></text></g><g><title>reqwest::connect::Connector::new_default_tls (3 samples, 0.88%)</title><rect x="29.8246%" y="613" width="0.8772%" height="15" fill="rgb(226,211,11)"/><text x="30.0746%" y="623.50"></text></g><g><title>native_tls::TlsConnectorBuilder::build (3 samples, 0.88%)</title><rect x="29.8246%" y="597" width="0.8772%" height="15" fill="rgb(236,162,54)"/><text x="30.0746%" y="607.50"></text></g><g><title>native_tls::imp::TlsConnector::new (3 samples, 0.88%)</title><rect x="29.8246%" y="581" width="0.8772%" height="15" fill="rgb(220,229,9)"/><text x="30.0746%" y="591.50"></text></g><g><title>openssl::ssl::connector::SslConnector::builder (3 samples, 0.88%)</title><rect x="29.8246%" y="565" width="0.8772%" height="15" fill="rgb(250,87,22)"/><text x="30.0746%" y="575.50"></text></g><g><title>X509_STORE_set_default_paths_ex (3 samples, 0.88%)</title><rect x="29.8246%" y="549" width="0.8772%" height="15" fill="rgb(239,43,17)"/><text x="30.0746%" y="559.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="533" width="0.8772%" height="15" fill="rgb(231,177,25)"/><text x="30.0746%" y="543.50"></text></g><g><title>X509_load_cert_crl_file_ex (3 samples, 0.88%)</title><rect x="29.8246%" y="517" width="0.8772%" height="15" fill="rgb(219,179,1)"/><text x="30.0746%" y="527.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (3 samples, 0.88%)</title><rect x="29.8246%" y="501" width="0.8772%" height="15" fill="rgb(238,219,53)"/><text x="30.0746%" y="511.50"></text></g><g><title>ASN1_item_d2i_ex (3 samples, 0.88%)</title><rect x="29.8246%" y="485" width="0.8772%" height="15" fill="rgb(232,167,36)"/><text x="30.0746%" y="495.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="469" width="0.8772%" height="15" fill="rgb(244,19,51)"/><text x="30.0746%" y="479.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="453" width="0.8772%" height="15" fill="rgb(224,6,22)"/><text x="30.0746%" y="463.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="437" width="0.8772%" height="15" fill="rgb(224,145,5)"/><text x="30.0746%" y="447.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="421" width="0.8772%" height="15" fill="rgb(234,130,49)"/><text x="30.0746%" y="431.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="405" width="0.8772%" height="15" fill="rgb(254,6,2)"/><text x="30.0746%" y="415.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="389" width="0.8772%" height="15" fill="rgb(208,96,46)"/><text x="30.0746%" y="399.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (3 samples, 0.88%)</title><rect x="29.8246%" y="373" width="0.8772%" height="15" fill="rgb(239,3,39)"/><text x="30.0746%" y="383.50"></text></g><g><title>OSSL_DECODER_do_all_provided (3 samples, 0.88%)</title><rect x="29.8246%" y="357" width="0.8772%" height="15" fill="rgb(233,210,1)"/><text x="30.0746%" y="367.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="341" width="0.8772%" height="15" fill="rgb(244,137,37)"/><text x="30.0746%" y="351.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="325" width="0.8772%" height="15" fill="rgb(240,136,2)"/><text x="30.0746%" y="335.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="309" width="0.8772%" height="15" fill="rgb(239,18,37)"/><text x="30.0746%" y="319.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="293" width="0.8772%" height="15" fill="rgb(218,185,22)"/><text x="30.0746%" y="303.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="277" width="0.8772%" height="15" fill="rgb(225,218,4)"/><text x="30.0746%" y="287.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="261" width="0.8772%" height="15" fill="rgb(230,182,32)"/><text x="30.0746%" y="271.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="245" width="0.8772%" height="15" fill="rgb(242,56,43)"/><text x="30.0746%" y="255.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="229" width="0.8772%" height="15" fill="rgb(233,99,24)"/><text x="30.0746%" y="239.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="29.8246%" y="213" width="0.8772%" height="15" fill="rgb(234,209,42)"/><text x="30.0746%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="30.4094%" y="197" width="0.2924%" height="15" fill="rgb(227,7,12)"/><text x="30.6594%" y="207.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.29%)</title><rect x="30.4094%" y="181" width="0.2924%" height="15" fill="rgb(245,203,43)"/><text x="30.6594%" y="191.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="30.4094%" y="165" width="0.2924%" height="15" fill="rgb(238,205,33)"/><text x="30.6594%" y="175.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.29%)</title><rect x="30.7018%" y="309" width="0.2924%" height="15" fill="rgb(231,56,7)"/><text x="30.9518%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="30.7018%" y="293" width="0.2924%" height="15" fill="rgb(244,186,29)"/><text x="30.9518%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="30.7018%" y="277" width="0.2924%" height="15" fill="rgb(234,111,31)"/><text x="30.9518%" y="287.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="30.7018%" y="261" width="0.2924%" height="15" fill="rgb(241,149,10)"/><text x="30.9518%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="30.7018%" y="245" width="0.2924%" height="15" fill="rgb(249,206,44)"/><text x="30.9518%" y="255.50"></text></g><g><title>OPENSSL_sk_new_reserve (1 samples, 0.29%)</title><rect x="30.7018%" y="229" width="0.2924%" height="15" fill="rgb(251,153,30)"/><text x="30.9518%" y="239.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.29%)</title><rect x="30.7018%" y="213" width="0.2924%" height="15" fill="rgb(239,152,38)"/><text x="30.9518%" y="223.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="30.7018%" y="197" width="0.2924%" height="15" fill="rgb(249,139,47)"/><text x="30.9518%" y="207.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 0.58%)</title><rect x="30.9942%" y="149" width="0.5848%" height="15" fill="rgb(244,64,35)"/><text x="31.2442%" y="159.50"></text></g><g><title>pthread_rwlock_unlock (2 samples, 0.58%)</title><rect x="30.9942%" y="133" width="0.5848%" height="15" fill="rgb(216,46,15)"/><text x="31.2442%" y="143.50"></text></g><g><title>OPENSSL_sk_value (1 samples, 0.29%)</title><rect x="31.5789%" y="149" width="0.2924%" height="15" fill="rgb(250,74,19)"/><text x="31.8289%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.29%)</title><rect x="31.8713%" y="133" width="0.2924%" height="15" fill="rgb(249,42,33)"/><text x="32.1213%" y="143.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="31.8713%" y="117" width="0.2924%" height="15" fill="rgb(242,149,17)"/><text x="32.1213%" y="127.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.29%)</title><rect x="32.1637%" y="133" width="0.2924%" height="15" fill="rgb(244,29,21)"/><text x="32.4137%" y="143.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="32.1637%" y="117" width="0.2924%" height="15" fill="rgb(220,130,37)"/><text x="32.4137%" y="127.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (6 samples, 1.75%)</title><rect x="30.9942%" y="293" width="1.7544%" height="15" fill="rgb(211,67,2)"/><text x="31.2442%" y="303.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="277" width="1.7544%" height="15" fill="rgb(235,68,52)"/><text x="31.2442%" y="287.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="261" width="1.7544%" height="15" fill="rgb(246,142,3)"/><text x="31.2442%" y="271.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="245" width="1.7544%" height="15" fill="rgb(241,25,7)"/><text x="31.2442%" y="255.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="229" width="1.7544%" height="15" fill="rgb(242,119,39)"/><text x="31.2442%" y="239.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="213" width="1.7544%" height="15" fill="rgb(241,98,45)"/><text x="31.2442%" y="223.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="197" width="1.7544%" height="15" fill="rgb(254,28,30)"/><text x="31.2442%" y="207.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="181" width="1.7544%" height="15" fill="rgb(241,142,54)"/><text x="31.2442%" y="191.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 1.75%)</title><rect x="30.9942%" y="165" width="1.7544%" height="15" fill="rgb(222,85,15)"/><text x="31.2442%" y="175.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 0.88%)</title><rect x="31.8713%" y="149" width="0.8772%" height="15" fill="rgb(210,85,47)"/><text x="32.1213%" y="159.50"></text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="32.4561%" y="133" width="0.2924%" height="15" fill="rgb(224,206,25)"/><text x="32.7061%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="32.4561%" y="117" width="0.2924%" height="15" fill="rgb(243,201,19)"/><text x="32.7061%" y="127.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.29%)</title><rect x="32.7485%" y="165" width="0.2924%" height="15" fill="rgb(236,59,4)"/><text x="32.9985%" y="175.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.29%)</title><rect x="32.7485%" y="149" width="0.2924%" height="15" fill="rgb(254,179,45)"/><text x="32.9985%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.29%)</title><rect x="33.0409%" y="165" width="0.2924%" height="15" fill="rgb(226,14,10)"/><text x="33.2909%" y="175.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="33.0409%" y="149" width="0.2924%" height="15" fill="rgb(244,27,41)"/><text x="33.2909%" y="159.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.29%)</title><rect x="33.3333%" y="165" width="0.2924%" height="15" fill="rgb(235,35,32)"/><text x="33.5833%" y="175.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="33.3333%" y="149" width="0.2924%" height="15" fill="rgb(218,68,31)"/><text x="33.5833%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.29%)</title><rect x="33.6257%" y="149" width="0.2924%" height="15" fill="rgb(207,120,37)"/><text x="33.8757%" y="159.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.29%)</title><rect x="33.6257%" y="133" width="0.2924%" height="15" fill="rgb(227,98,0)"/><text x="33.8757%" y="143.50"></text></g><g><title>CRYPTO_THREAD_write_lock (1 samples, 0.29%)</title><rect x="33.9181%" y="149" width="0.2924%" height="15" fill="rgb(207,7,3)"/><text x="34.1681%" y="159.50"></text></g><g><title>pthread_rwlock_wrlock (1 samples, 0.29%)</title><rect x="33.9181%" y="133" width="0.2924%" height="15" fill="rgb(206,98,19)"/><text x="34.1681%" y="143.50"></text></g><g><title>OPENSSL_LH_retrieve (2 samples, 0.58%)</title><rect x="34.2105%" y="149" width="0.5848%" height="15" fill="rgb(217,5,26)"/><text x="34.4605%" y="159.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="34.2105%" y="133" width="0.5848%" height="15" fill="rgb(235,190,38)"/><text x="34.4605%" y="143.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="34.2105%" y="117" width="0.5848%" height="15" fill="rgb(247,86,24)"/><text x="34.4605%" y="127.50"></text></g><g><title>OPENSSL_sk_insert (1 samples, 0.29%)</title><rect x="34.7953%" y="149" width="0.2924%" height="15" fill="rgb(205,101,16)"/><text x="35.0453%" y="159.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="35.0877%" y="149" width="0.2924%" height="15" fill="rgb(246,168,33)"/><text x="35.3377%" y="159.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.29%)</title><rect x="35.0877%" y="133" width="0.2924%" height="15" fill="rgb(231,114,1)"/><text x="35.3377%" y="143.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.29%)</title><rect x="35.0877%" y="117" width="0.2924%" height="15" fill="rgb(207,184,53)"/><text x="35.3377%" y="127.50"></text></g><g><title>[libcrypto.so.3] (7 samples, 2.05%)</title><rect x="33.6257%" y="165" width="2.0468%" height="15" fill="rgb(224,95,51)"/><text x="33.8757%" y="175.50">[..</text></g><g><title>malloc@plt (1 samples, 0.29%)</title><rect x="35.3801%" y="149" width="0.2924%" height="15" fill="rgb(212,188,45)"/><text x="35.6301%" y="159.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (18 samples, 5.26%)</title><rect x="30.7018%" y="677" width="5.2632%" height="15" fill="rgb(223,154,38)"/><text x="30.9518%" y="687.50">tokio:..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (18 samples, 5.26%)</title><rect x="30.7018%" y="661" width="5.2632%" height="15" fill="rgb(251,22,52)"/><text x="30.9518%" y="671.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (18 samples, 5.26%)</title><rect x="30.7018%" y="645" width="5.2632%" height="15" fill="rgb(229,209,22)"/><text x="30.9518%" y="655.50">tokio:..</text></g><g><title>tokio::runtime::context::set_scheduler (18 samples, 5.26%)</title><rect x="30.7018%" y="629" width="5.2632%" height="15" fill="rgb(234,138,34)"/><text x="30.9518%" y="639.50">tokio:..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (18 samples, 5.26%)</title><rect x="30.7018%" y="613" width="5.2632%" height="15" fill="rgb(212,95,11)"/><text x="30.9518%" y="623.50">tokio:..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (18 samples, 5.26%)</title><rect x="30.7018%" y="597" width="5.2632%" height="15" fill="rgb(240,179,47)"/><text x="30.9518%" y="607.50">tokio:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 5.26%)</title><rect x="30.7018%" y="581" width="5.2632%" height="15" fill="rgb(240,163,11)"/><text x="30.9518%" y="591.50">&lt;core:..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (18 samples, 5.26%)</title><rect x="30.7018%" y="565" width="5.2632%" height="15" fill="rgb(236,37,12)"/><text x="30.9518%" y="575.50">reqwes..</text></g><g><title>reqwest::connect::Connector::new_default_tls (18 samples, 5.26%)</title><rect x="30.7018%" y="549" width="5.2632%" height="15" fill="rgb(232,164,16)"/><text x="30.9518%" y="559.50">reqwes..</text></g><g><title>native_tls::TlsConnectorBuilder::build (18 samples, 5.26%)</title><rect x="30.7018%" y="533" width="5.2632%" height="15" fill="rgb(244,205,15)"/><text x="30.9518%" y="543.50">native..</text></g><g><title>native_tls::imp::TlsConnector::new (18 samples, 5.26%)</title><rect x="30.7018%" y="517" width="5.2632%" height="15" fill="rgb(223,117,47)"/><text x="30.9518%" y="527.50">native..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (18 samples, 5.26%)</title><rect x="30.7018%" y="501" width="5.2632%" height="15" fill="rgb(244,107,35)"/><text x="30.9518%" y="511.50">openss..</text></g><g><title>X509_STORE_set_default_paths_ex (18 samples, 5.26%)</title><rect x="30.7018%" y="485" width="5.2632%" height="15" fill="rgb(205,140,8)"/><text x="30.9518%" y="495.50">X509_S..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="469" width="5.2632%" height="15" fill="rgb(228,84,46)"/><text x="30.9518%" y="479.50">[libcr..</text></g><g><title>X509_load_cert_crl_file_ex (18 samples, 5.26%)</title><rect x="30.7018%" y="453" width="5.2632%" height="15" fill="rgb(254,188,9)"/><text x="30.9518%" y="463.50">X509_l..</text></g><g><title>PEM_X509_INFO_read_bio_ex (18 samples, 5.26%)</title><rect x="30.7018%" y="437" width="5.2632%" height="15" fill="rgb(206,112,54)"/><text x="30.9518%" y="447.50">PEM_X5..</text></g><g><title>ASN1_item_d2i_ex (18 samples, 5.26%)</title><rect x="30.7018%" y="421" width="5.2632%" height="15" fill="rgb(216,84,49)"/><text x="30.9518%" y="431.50">ASN1_i..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="405" width="5.2632%" height="15" fill="rgb(214,194,35)"/><text x="30.9518%" y="415.50">[libcr..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="389" width="5.2632%" height="15" fill="rgb(249,28,3)"/><text x="30.9518%" y="399.50">[libcr..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="373" width="5.2632%" height="15" fill="rgb(222,56,52)"/><text x="30.9518%" y="383.50">[libcr..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="357" width="5.2632%" height="15" fill="rgb(245,217,50)"/><text x="30.9518%" y="367.50">[libcr..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="341" width="5.2632%" height="15" fill="rgb(213,201,24)"/><text x="30.9518%" y="351.50">[libcr..</text></g><g><title>[libcrypto.so.3] (18 samples, 5.26%)</title><rect x="30.7018%" y="325" width="5.2632%" height="15" fill="rgb(248,116,28)"/><text x="30.9518%" y="335.50">[libcr..</text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (17 samples, 4.97%)</title><rect x="30.9942%" y="309" width="4.9708%" height="15" fill="rgb(219,72,43)"/><text x="31.2442%" y="319.50">OSSL_D..</text></g><g><title>OSSL_DECODER_do_all_provided (11 samples, 3.22%)</title><rect x="32.7485%" y="293" width="3.2164%" height="15" fill="rgb(209,138,14)"/><text x="32.9985%" y="303.50">OSS..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="277" width="3.2164%" height="15" fill="rgb(222,18,33)"/><text x="32.9985%" y="287.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="261" width="3.2164%" height="15" fill="rgb(213,199,7)"/><text x="32.9985%" y="271.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="245" width="3.2164%" height="15" fill="rgb(250,110,10)"/><text x="32.9985%" y="255.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="229" width="3.2164%" height="15" fill="rgb(248,123,6)"/><text x="32.9985%" y="239.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="213" width="3.2164%" height="15" fill="rgb(206,91,31)"/><text x="32.9985%" y="223.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="197" width="3.2164%" height="15" fill="rgb(211,154,13)"/><text x="32.9985%" y="207.50">[li..</text></g><g><title>[libcrypto.so.3] (11 samples, 3.22%)</title><rect x="32.7485%" y="181" width="3.2164%" height="15" fill="rgb(225,148,7)"/><text x="32.9985%" y="191.50">[li..</text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="35.6725%" y="165" width="0.2924%" height="15" fill="rgb(220,160,43)"/><text x="35.9225%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="35.6725%" y="149" width="0.2924%" height="15" fill="rgb(213,52,39)"/><text x="35.9225%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (2 samples, 0.58%)</title><rect x="35.9649%" y="677" width="0.5848%" height="15" fill="rgb(243,137,7)"/><text x="36.2149%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.58%)</title><rect x="35.9649%" y="661" width="0.5848%" height="15" fill="rgb(230,79,13)"/><text x="36.2149%" y="671.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (2 samples, 0.58%)</title><rect x="35.9649%" y="645" width="0.5848%" height="15" fill="rgb(247,105,23)"/><text x="36.2149%" y="655.50"></text></g><g><title>reqwest::connect::Connector::new_default_tls (2 samples, 0.58%)</title><rect x="35.9649%" y="629" width="0.5848%" height="15" fill="rgb(223,179,41)"/><text x="36.2149%" y="639.50"></text></g><g><title>native_tls::TlsConnectorBuilder::build (2 samples, 0.58%)</title><rect x="35.9649%" y="613" width="0.5848%" height="15" fill="rgb(218,9,34)"/><text x="36.2149%" y="623.50"></text></g><g><title>native_tls::imp::TlsConnector::new (2 samples, 0.58%)</title><rect x="35.9649%" y="597" width="0.5848%" height="15" fill="rgb(222,106,8)"/><text x="36.2149%" y="607.50"></text></g><g><title>openssl::ssl::connector::SslConnector::builder (2 samples, 0.58%)</title><rect x="35.9649%" y="581" width="0.5848%" height="15" fill="rgb(211,220,0)"/><text x="36.2149%" y="591.50"></text></g><g><title>X509_STORE_set_default_paths_ex (2 samples, 0.58%)</title><rect x="35.9649%" y="565" width="0.5848%" height="15" fill="rgb(229,52,16)"/><text x="36.2149%" y="575.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="549" width="0.5848%" height="15" fill="rgb(212,155,18)"/><text x="36.2149%" y="559.50"></text></g><g><title>X509_load_cert_crl_file_ex (2 samples, 0.58%)</title><rect x="35.9649%" y="533" width="0.5848%" height="15" fill="rgb(242,21,14)"/><text x="36.2149%" y="543.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (2 samples, 0.58%)</title><rect x="35.9649%" y="517" width="0.5848%" height="15" fill="rgb(222,19,48)"/><text x="36.2149%" y="527.50"></text></g><g><title>ASN1_item_d2i_ex (2 samples, 0.58%)</title><rect x="35.9649%" y="501" width="0.5848%" height="15" fill="rgb(232,45,27)"/><text x="36.2149%" y="511.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="485" width="0.5848%" height="15" fill="rgb(249,103,42)"/><text x="36.2149%" y="495.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="469" width="0.5848%" height="15" fill="rgb(246,81,33)"/><text x="36.2149%" y="479.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="453" width="0.5848%" height="15" fill="rgb(252,33,42)"/><text x="36.2149%" y="463.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="437" width="0.5848%" height="15" fill="rgb(209,212,41)"/><text x="36.2149%" y="447.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="421" width="0.5848%" height="15" fill="rgb(207,154,6)"/><text x="36.2149%" y="431.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="405" width="0.5848%" height="15" fill="rgb(223,64,47)"/><text x="36.2149%" y="415.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (2 samples, 0.58%)</title><rect x="35.9649%" y="389" width="0.5848%" height="15" fill="rgb(211,161,38)"/><text x="36.2149%" y="399.50"></text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 0.58%)</title><rect x="35.9649%" y="373" width="0.5848%" height="15" fill="rgb(219,138,40)"/><text x="36.2149%" y="383.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="357" width="0.5848%" height="15" fill="rgb(241,228,46)"/><text x="36.2149%" y="367.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="341" width="0.5848%" height="15" fill="rgb(223,209,38)"/><text x="36.2149%" y="351.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="325" width="0.5848%" height="15" fill="rgb(236,164,45)"/><text x="36.2149%" y="335.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="309" width="0.5848%" height="15" fill="rgb(231,15,5)"/><text x="36.2149%" y="319.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="293" width="0.5848%" height="15" fill="rgb(252,35,15)"/><text x="36.2149%" y="303.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="277" width="0.5848%" height="15" fill="rgb(248,181,18)"/><text x="36.2149%" y="287.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="261" width="0.5848%" height="15" fill="rgb(233,39,42)"/><text x="36.2149%" y="271.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="245" width="0.5848%" height="15" fill="rgb(238,110,33)"/><text x="36.2149%" y="255.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="229" width="0.5848%" height="15" fill="rgb(233,195,10)"/><text x="36.2149%" y="239.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="213" width="0.5848%" height="15" fill="rgb(254,105,3)"/><text x="36.2149%" y="223.50"></text></g><g><title>OPENSSL_LH_retrieve (2 samples, 0.58%)</title><rect x="35.9649%" y="197" width="0.5848%" height="15" fill="rgb(221,225,9)"/><text x="36.2149%" y="207.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.58%)</title><rect x="35.9649%" y="181" width="0.5848%" height="15" fill="rgb(224,227,45)"/><text x="36.2149%" y="191.50"></text></g><g><title>OPENSSL_LH_strhash (1 samples, 0.29%)</title><rect x="36.2573%" y="165" width="0.2924%" height="15" fill="rgb(229,198,43)"/><text x="36.5073%" y="175.50"></text></g><g><title>reqwest-interna (126 samples, 36.84%)</title><rect x="0.0000%" y="709" width="36.8421%" height="15" fill="rgb(206,209,35)"/><text x="0.2500%" y="719.50">reqwest-interna</text></g><g><title>[unknown] (97 samples, 28.36%)</title><rect x="8.4795%" y="693" width="28.3626%" height="15" fill="rgb(245,195,53)"/><text x="8.7295%" y="703.50">[unknown]</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.29%)</title><rect x="36.5497%" y="677" width="0.2924%" height="15" fill="rgb(240,92,26)"/><text x="36.7997%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.29%)</title><rect x="36.5497%" y="661" width="0.2924%" height="15" fill="rgb(207,40,23)"/><text x="36.7997%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.29%)</title><rect x="36.5497%" y="645" width="0.2924%" height="15" fill="rgb(223,111,35)"/><text x="36.7997%" y="655.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="36.5497%" y="629" width="0.2924%" height="15" fill="rgb(229,147,28)"/><text x="36.7997%" y="639.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="36.5497%" y="613" width="0.2924%" height="15" fill="rgb(211,29,28)"/><text x="36.7997%" y="623.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.29%)</title><rect x="36.5497%" y="597" width="0.2924%" height="15" fill="rgb(228,72,33)"/><text x="36.7997%" y="607.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.29%)</title><rect x="36.5497%" y="581" width="0.2924%" height="15" fill="rgb(205,214,31)"/><text x="36.7997%" y="591.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (1 samples, 0.29%)</title><rect x="36.5497%" y="565" width="0.2924%" height="15" fill="rgb(224,111,15)"/><text x="36.7997%" y="575.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (1 samples, 0.29%)</title><rect x="36.5497%" y="549" width="0.2924%" height="15" fill="rgb(253,21,26)"/><text x="36.7997%" y="559.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (1 samples, 0.29%)</title><rect x="36.5497%" y="533" width="0.2924%" height="15" fill="rgb(245,139,43)"/><text x="36.7997%" y="543.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.29%)</title><rect x="36.5497%" y="517" width="0.2924%" height="15" fill="rgb(252,170,7)"/><text x="36.7997%" y="527.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.29%)</title><rect x="36.5497%" y="501" width="0.2924%" height="15" fill="rgb(231,118,14)"/><text x="36.7997%" y="511.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.29%)</title><rect x="36.5497%" y="485" width="0.2924%" height="15" fill="rgb(238,83,0)"/><text x="36.7997%" y="495.50"></text></g><g><title>SSL_read (1 samples, 0.29%)</title><rect x="36.5497%" y="469" width="0.2924%" height="15" fill="rgb(221,39,39)"/><text x="36.7997%" y="479.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="36.5497%" y="453" width="0.2924%" height="15" fill="rgb(222,119,46)"/><text x="36.7997%" y="463.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="36.5497%" y="437" width="0.2924%" height="15" fill="rgb(222,165,49)"/><text x="36.7997%" y="447.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.29%)</title><rect x="36.5497%" y="421" width="0.2924%" height="15" fill="rgb(219,113,52)"/><text x="36.7997%" y="431.50"></text></g><g><title>_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he493e0cb844aee70E.llvm.9394578744088627060 (1 samples, 0.29%)</title><rect x="38.3041%" y="677" width="0.2924%" height="15" fill="rgb(214,7,15)"/><text x="38.5541%" y="687.50"></text></g><g><title>[[heap]] (2 samples, 0.58%)</title><rect x="38.3041%" y="693" width="0.5848%" height="15" fill="rgb(235,32,4)"/><text x="38.5541%" y="703.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hcd6cc7d6e55edabfE.llvm.17275382644218353537 (1 samples, 0.29%)</title><rect x="38.5965%" y="677" width="0.2924%" height="15" fill="rgb(238,90,54)"/><text x="38.8465%" y="687.50"></text></g><g><title>[[stack]] (1 samples, 0.29%)</title><rect x="38.8889%" y="693" width="0.2924%" height="15" fill="rgb(213,208,19)"/><text x="39.1389%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="38.8889%" y="677" width="0.2924%" height="15" fill="rgb(233,156,4)"/><text x="39.1389%" y="687.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (1 samples, 0.29%)</title><rect x="39.1813%" y="677" width="0.2924%" height="15" fill="rgb(207,194,5)"/><text x="39.4313%" y="687.50"></text></g><g><title>[anon] (2 samples, 0.58%)</title><rect x="39.1813%" y="693" width="0.5848%" height="15" fill="rgb(206,111,30)"/><text x="39.4313%" y="703.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="39.4737%" y="677" width="0.2924%" height="15" fill="rgb(243,70,54)"/><text x="39.7237%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 1.75%)</title><rect x="39.7661%" y="693" width="1.7544%" height="15" fill="rgb(242,28,8)"/><text x="40.0161%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.58%)</title><rect x="40.9357%" y="677" width="0.5848%" height="15" fill="rgb(219,106,18)"/><text x="41.1857%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="661" width="0.2924%" height="15" fill="rgb(244,222,10)"/><text x="41.4781%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="645" width="0.2924%" height="15" fill="rgb(236,179,52)"/><text x="41.4781%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="629" width="0.2924%" height="15" fill="rgb(213,23,39)"/><text x="41.4781%" y="639.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.29%)</title><rect x="41.2281%" y="613" width="0.2924%" height="15" fill="rgb(238,48,10)"/><text x="41.4781%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="597" width="0.2924%" height="15" fill="rgb(251,196,23)"/><text x="41.4781%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="581" width="0.2924%" height="15" fill="rgb(250,152,24)"/><text x="41.4781%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="565" width="0.2924%" height="15" fill="rgb(209,150,17)"/><text x="41.4781%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.29%)</title><rect x="41.2281%" y="549" width="0.2924%" height="15" fill="rgb(234,202,34)"/><text x="41.4781%" y="559.50"></text></g><g><title>[libc.so.6] (6 samples, 1.75%)</title><rect x="41.5205%" y="693" width="1.7544%" height="15" fill="rgb(253,148,53)"/><text x="41.7705%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="42.9825%" y="677" width="0.2924%" height="15" fill="rgb(218,129,16)"/><text x="43.2325%" y="687.50"></text></g><g><title>__ctype_init (1 samples, 0.29%)</title><rect x="42.9825%" y="661" width="0.2924%" height="15" fill="rgb(216,85,19)"/><text x="43.2325%" y="671.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.29%)</title><rect x="43.2749%" y="677" width="0.2924%" height="15" fill="rgb(235,228,7)"/><text x="43.5249%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="43.5673%" y="677" width="0.5848%" height="15" fill="rgb(245,175,0)"/><text x="43.8173%" y="687.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::State::set_next_state (1 samples, 0.29%)</title><rect x="44.1520%" y="677" width="0.2924%" height="15" fill="rgb(208,168,36)"/><text x="44.4020%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.29%)</title><rect x="44.4444%" y="677" width="0.2924%" height="15" fill="rgb(246,171,24)"/><text x="44.6944%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.29%)</title><rect x="44.7368%" y="677" width="0.2924%" height="15" fill="rgb(215,142,24)"/><text x="44.9868%" y="687.50"></text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="45.0292%" y="677" width="0.2924%" height="15" fill="rgb(250,187,7)"/><text x="45.2792%" y="687.50"></text></g><g><title>[unknown] (8 samples, 2.34%)</title><rect x="43.2749%" y="693" width="2.3392%" height="15" fill="rgb(228,66,33)"/><text x="43.5249%" y="703.50">[..</text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="45.3216%" y="677" width="0.2924%" height="15" fill="rgb(234,215,21)"/><text x="45.5716%" y="687.50"></text></g><g><title>std::io::stdio::_print (2 samples, 0.58%)</title><rect x="45.6140%" y="437" width="0.5848%" height="15" fill="rgb(222,191,20)"/><text x="45.8640%" y="447.50"></text></g><g><title>std::io::stdio::print_to (2 samples, 0.58%)</title><rect x="45.6140%" y="421" width="0.5848%" height="15" fill="rgb(245,79,54)"/><text x="45.8640%" y="431.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="405" width="0.5848%" height="15" fill="rgb(240,10,37)"/><text x="45.8640%" y="415.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="389" width="0.5848%" height="15" fill="rgb(214,192,32)"/><text x="45.8640%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="373" width="0.5848%" height="15" fill="rgb(209,36,54)"/><text x="45.8640%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.58%)</title><rect x="45.6140%" y="357" width="0.5848%" height="15" fill="rgb(220,10,11)"/><text x="45.8640%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="341" width="0.5848%" height="15" fill="rgb(221,106,17)"/><text x="45.8640%" y="351.50"></text></g><g><title>&lt;terraphim_pipeline::RoleGraph as core::fmt::Debug&gt;::fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="325" width="0.5848%" height="15" fill="rgb(251,142,44)"/><text x="45.8640%" y="335.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (2 samples, 0.58%)</title><rect x="45.6140%" y="309" width="0.5848%" height="15" fill="rgb(238,13,15)"/><text x="45.8640%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.58%)</title><rect x="45.6140%" y="293" width="0.5848%" height="15" fill="rgb(208,107,27)"/><text x="45.8640%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.58%)</title><rect x="45.6140%" y="277" width="0.5848%" height="15" fill="rgb(205,136,37)"/><text x="45.8640%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (2 samples, 0.58%)</title><rect x="45.6140%" y="261" width="0.5848%" height="15" fill="rgb(250,205,27)"/><text x="45.8640%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="245" width="0.5848%" height="15" fill="rgb(210,80,43)"/><text x="45.8640%" y="255.50"></text></g><g><title>core::fmt::builders::DebugMap::entry (2 samples, 0.58%)</title><rect x="45.6140%" y="229" width="0.5848%" height="15" fill="rgb(247,160,36)"/><text x="45.8640%" y="239.50"></text></g><g><title>core::fmt::builders::DebugMap::key (2 samples, 0.58%)</title><rect x="45.6140%" y="213" width="0.5848%" height="15" fill="rgb(234,13,49)"/><text x="45.8640%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.58%)</title><rect x="45.6140%" y="197" width="0.5848%" height="15" fill="rgb(234,122,0)"/><text x="45.8640%" y="207.50"></text></g><g><title>core::fmt::builders::DebugMap::key::_{{closure}} (2 samples, 0.58%)</title><rect x="45.6140%" y="181" width="0.5848%" height="15" fill="rgb(207,146,38)"/><text x="45.8640%" y="191.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.58%)</title><rect x="45.6140%" y="165" width="0.5848%" height="15" fill="rgb(207,177,25)"/><text x="45.8640%" y="175.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (1 samples, 0.29%)</title><rect x="45.9064%" y="149" width="0.2924%" height="15" fill="rgb(211,178,42)"/><text x="46.1564%" y="159.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (1 samples, 0.29%)</title><rect x="45.9064%" y="133" width="0.2924%" height="15" fill="rgb(230,69,54)"/><text x="46.1564%" y="143.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.29%)</title><rect x="45.9064%" y="117" width="0.2924%" height="15" fill="rgb(214,135,41)"/><text x="46.1564%" y="127.50"></text></g><g><title>core::unicode::unicode_data::skip_search (1 samples, 0.29%)</title><rect x="45.9064%" y="101" width="0.2924%" height="15" fill="rgb(237,67,25)"/><text x="46.1564%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.29%)</title><rect x="45.9064%" y="85" width="0.2924%" height="15" fill="rgb(222,189,50)"/><text x="46.1564%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.29%)</title><rect x="45.9064%" y="69" width="0.2924%" height="15" fill="rgb(245,148,34)"/><text x="46.1564%" y="79.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::binary_search_by_key::_{{closure}} (1 samples, 0.29%)</title><rect x="45.9064%" y="53" width="0.2924%" height="15" fill="rgb(222,29,6)"/><text x="46.1564%" y="63.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.29%)</title><rect x="45.9064%" y="37" width="0.2924%" height="15" fill="rgb(221,189,43)"/><text x="46.1564%" y="47.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.29%)</title><rect x="46.1988%" y="341" width="0.2924%" height="15" fill="rgb(207,36,27)"/><text x="46.4488%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.29%)</title><rect x="46.1988%" y="325" width="0.2924%" height="15" fill="rgb(217,90,24)"/><text x="46.4488%" y="335.50"></text></g><g><title>reqwest::blocking::request::RequestBuilder::send (6 samples, 1.75%)</title><rect x="46.1988%" y="421" width="1.7544%" height="15" fill="rgb(224,66,35)"/><text x="46.4488%" y="431.50"></text></g><g><title>reqwest::blocking::client::Client::execute (6 samples, 1.75%)</title><rect x="46.1988%" y="405" width="1.7544%" height="15" fill="rgb(221,13,50)"/><text x="46.4488%" y="415.50"></text></g><g><title>reqwest::blocking::wait::timeout (6 samples, 1.75%)</title><rect x="46.1988%" y="389" width="1.7544%" height="15" fill="rgb(236,68,49)"/><text x="46.4488%" y="399.50"></text></g><g><title>std::thread::park_timeout (6 samples, 1.75%)</title><rect x="46.1988%" y="373" width="1.7544%" height="15" fill="rgb(229,146,28)"/><text x="46.4488%" y="383.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park_timeout (6 samples, 1.75%)</title><rect x="46.1988%" y="357" width="1.7544%" height="15" fill="rgb(225,31,38)"/><text x="46.4488%" y="367.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 1.46%)</title><rect x="46.4912%" y="341" width="1.4620%" height="15" fill="rgb(250,208,3)"/><text x="46.7412%" y="351.50"></text></g><g><title>syscall (5 samples, 1.46%)</title><rect x="46.4912%" y="325" width="1.4620%" height="15" fill="rgb(246,54,23)"/><text x="46.7412%" y="335.50"></text></g><g><title>serde_path_to_error::de::deserialize (1 samples, 0.29%)</title><rect x="47.9532%" y="421" width="0.2924%" height="15" fill="rgb(243,76,11)"/><text x="48.2032%" y="431.50"></text></g><g><title>&lt;serde_path_to_error::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.29%)</title><rect x="47.9532%" y="405" width="0.2924%" height="15" fill="rgb(245,21,50)"/><text x="48.2032%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.29%)</title><rect x="47.9532%" y="389" width="0.2924%" height="15" fill="rgb(228,9,43)"/><text x="48.2032%" y="399.50"></text></g><g><title>serde_path_to_error::de::&lt;impl serde::de::Visitor for serde_path_to_error::wrap::Wrap&lt;X&gt;&gt;::visit_map (1 samples, 0.29%)</title><rect x="47.9532%" y="373" width="0.2924%" height="15" fill="rgb(208,100,47)"/><text x="48.2032%" y="383.50"></text></g><g><title>&lt;serde_path_to_error::de::MapAccess&lt;X&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.29%)</title><rect x="47.9532%" y="357" width="0.2924%" height="15" fill="rgb(232,26,8)"/><text x="48.2032%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.29%)</title><rect x="47.9532%" y="341" width="0.2924%" height="15" fill="rgb(216,166,38)"/><text x="48.2032%" y="351.50"></text></g><g><title>&lt;serde_path_to_error::de::CaptureKey&lt;X&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.29%)</title><rect x="47.9532%" y="325" width="0.2924%" height="15" fill="rgb(251,202,51)"/><text x="48.2032%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.29%)</title><rect x="47.9532%" y="309" width="0.2924%" height="15" fill="rgb(254,216,34)"/><text x="48.2032%" y="319.50"></text></g><g><title>terraphim_automata::load_automata (8 samples, 2.34%)</title><rect x="46.1988%" y="437" width="2.3392%" height="15" fill="rgb(251,32,27)"/><text x="46.4488%" y="447.50">t..</text></g><g><title>std::io::stdio::_print (1 samples, 0.29%)</title><rect x="48.2456%" y="421" width="0.2924%" height="15" fill="rgb(208,127,28)"/><text x="48.4956%" y="431.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.29%)</title><rect x="48.2456%" y="405" width="0.2924%" height="15" fill="rgb(224,137,22)"/><text x="48.4956%" y="415.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="389" width="0.2924%" height="15" fill="rgb(254,70,32)"/><text x="48.4956%" y="399.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="373" width="0.2924%" height="15" fill="rgb(229,75,37)"/><text x="48.4956%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="357" width="0.2924%" height="15" fill="rgb(252,64,23)"/><text x="48.4956%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.29%)</title><rect x="48.2456%" y="341" width="0.2924%" height="15" fill="rgb(232,162,48)"/><text x="48.4956%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="325" width="0.2924%" height="15" fill="rgb(246,160,12)"/><text x="48.4956%" y="335.50"></text></g><g><title>&lt;reqwest::blocking::response::Response as core::fmt::Debug&gt;::fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="309" width="0.2924%" height="15" fill="rgb(247,166,0)"/><text x="48.4956%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.29%)</title><rect x="48.2456%" y="293" width="0.2924%" height="15" fill="rgb(249,219,21)"/><text x="48.4956%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.29%)</title><rect x="48.2456%" y="277" width="0.2924%" height="15" fill="rgb(205,209,3)"/><text x="48.4956%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (1 samples, 0.29%)</title><rect x="48.2456%" y="261" width="0.2924%" height="15" fill="rgb(243,44,1)"/><text x="48.4956%" y="271.50"></text></g><g><title>_ZN45_$LT$url..Url$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ca2d8744ab5c263E.llvm.10214221588680390457 (1 samples, 0.29%)</title><rect x="48.2456%" y="245" width="0.2924%" height="15" fill="rgb(206,159,16)"/><text x="48.4956%" y="255.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.29%)</title><rect x="48.2456%" y="229" width="0.2924%" height="15" fill="rgb(244,77,30)"/><text x="48.4956%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.29%)</title><rect x="48.2456%" y="213" width="0.2924%" height="15" fill="rgb(218,69,12)"/><text x="48.4956%" y="223.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (1 samples, 0.29%)</title><rect x="48.2456%" y="197" width="0.2924%" height="15" fill="rgb(212,87,7)"/><text x="48.4956%" y="207.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.29%)</title><rect x="48.2456%" y="181" width="0.2924%" height="15" fill="rgb(245,114,25)"/><text x="48.4956%" y="191.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="48.2456%" y="165" width="0.2924%" height="15" fill="rgb(210,61,42)"/><text x="48.4956%" y="175.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.29%)</title><rect x="48.2456%" y="149" width="0.2924%" height="15" fill="rgb(211,52,33)"/><text x="48.4956%" y="159.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.29%)</title><rect x="48.2456%" y="133" width="0.2924%" height="15" fill="rgb(234,58,33)"/><text x="48.4956%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.29%)</title><rect x="48.5380%" y="421" width="0.2924%" height="15" fill="rgb(220,115,36)"/><text x="48.7880%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.29%)</title><rect x="48.5380%" y="405" width="0.2924%" height="15" fill="rgb(243,153,54)"/><text x="48.7880%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.29%)</title><rect x="48.5380%" y="389" width="0.2924%" height="15" fill="rgb(251,47,18)"/><text x="48.7880%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.29%)</title><rect x="48.5380%" y="373" width="0.2924%" height="15" fill="rgb(242,102,42)"/><text x="48.7880%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.29%)</title><rect x="48.5380%" y="357" width="0.2924%" height="15" fill="rgb(234,31,38)"/><text x="48.7880%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.29%)</title><rect x="48.5380%" y="341" width="0.2924%" height="15" fill="rgb(221,117,51)"/><text x="48.7880%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.29%)</title><rect x="48.5380%" y="325" width="0.2924%" height="15" fill="rgb(212,20,18)"/><text x="48.7880%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.29%)</title><rect x="48.5380%" y="309" width="0.2924%" height="15" fill="rgb(245,133,36)"/><text x="48.7880%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.29%)</title><rect x="48.5380%" y="293" width="0.2924%" height="15" fill="rgb(212,6,19)"/><text x="48.7880%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.29%)</title><rect x="48.8304%" y="421" width="0.2924%" height="15" fill="rgb(218,1,36)"/><text x="49.0804%" y="431.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build_auto (2 samples, 0.58%)</title><rect x="49.1228%" y="405" width="0.5848%" height="15" fill="rgb(246,84,54)"/><text x="49.3728%" y="415.50"></text></g><g><title>aho_corasick::nfa::contiguous::Builder::build_from_noncontiguous (2 samples, 0.58%)</title><rect x="49.1228%" y="389" width="0.5848%" height="15" fill="rgb(242,110,6)"/><text x="49.3728%" y="399.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (20 samples, 5.85%)</title><rect x="50.2924%" y="389" width="5.8480%" height="15" fill="rgb(214,47,5)"/><text x="50.5424%" y="399.50">aho_cor..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 2.63%)</title><rect x="53.5088%" y="373" width="2.6316%" height="15" fill="rgb(218,159,25)"/><text x="53.7588%" y="383.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.58%)</title><rect x="55.5556%" y="357" width="0.5848%" height="15" fill="rgb(215,211,28)"/><text x="55.8056%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="55.8480%" y="341" width="0.2924%" height="15" fill="rgb(238,59,32)"/><text x="56.0980%" y="351.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.29%)</title><rect x="56.1404%" y="389" width="0.2924%" height="15" fill="rgb(226,82,3)"/><text x="56.3904%" y="399.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.29%)</title><rect x="56.1404%" y="373" width="0.2924%" height="15" fill="rgb(240,164,32)"/><text x="56.3904%" y="383.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::State::set_next_state (3 samples, 0.88%)</title><rect x="56.4327%" y="389" width="0.8772%" height="15" fill="rgb(232,46,7)"/><text x="56.6827%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.88%)</title><rect x="56.4327%" y="373" width="0.8772%" height="15" fill="rgb(229,129,53)"/><text x="56.6827%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hcd6cc7d6e55edabfE.llvm.17275382644218353537 (3 samples, 0.88%)</title><rect x="56.4327%" y="357" width="0.8772%" height="15" fill="rgb(234,188,29)"/><text x="56.6827%" y="367.50"></text></g><g><title>malloc (3 samples, 0.88%)</title><rect x="56.4327%" y="341" width="0.8772%" height="15" fill="rgb(246,141,4)"/><text x="56.6827%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="57.0175%" y="325" width="0.2924%" height="15" fill="rgb(229,23,39)"/><text x="57.2675%" y="335.50"></text></g><g><title>terraphim_automata::matcher::find_matches (32 samples, 9.36%)</title><rect x="48.5380%" y="437" width="9.3567%" height="15" fill="rgb(206,12,3)"/><text x="48.7880%" y="447.50">terraphim_aut..</text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (30 samples, 8.77%)</title><rect x="49.1228%" y="421" width="8.7719%" height="15" fill="rgb(252,226,20)"/><text x="49.3728%" y="431.50">aho_corasick..</text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (28 samples, 8.19%)</title><rect x="49.7076%" y="405" width="8.1871%" height="15" fill="rgb(216,123,35)"/><text x="49.9576%" y="415.50">aho_corasic..</text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::set_range (2 samples, 0.58%)</title><rect x="57.3099%" y="389" width="0.5848%" height="15" fill="rgb(212,68,40)"/><text x="57.5599%" y="399.50"></text></g><g><title>aho_corasick::nfa::contiguous::Builder::build_from_noncontiguous (3 samples, 0.88%)</title><rect x="57.8947%" y="389" width="0.8772%" height="15" fill="rgb(254,125,32)"/><text x="58.1447%" y="399.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build_auto (7 samples, 2.05%)</title><rect x="57.8947%" y="405" width="2.0468%" height="15" fill="rgb(253,97,22)"/><text x="58.1447%" y="415.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;aho_corasick::nfa::noncontiguous::NFA&gt; (4 samples, 1.17%)</title><rect x="58.7719%" y="389" width="1.1696%" height="15" fill="rgb(241,101,14)"/><text x="59.0219%" y="399.50"></text></g><g><title>cfree (4 samples, 1.17%)</title><rect x="58.7719%" y="373" width="1.1696%" height="15" fill="rgb(238,103,29)"/><text x="59.0219%" y="383.50"></text></g><g><title>[libc.so.6] (3 samples, 0.88%)</title><rect x="59.0643%" y="357" width="0.8772%" height="15" fill="rgb(233,195,47)"/><text x="59.3143%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="59.3567%" y="341" width="0.5848%" height="15" fill="rgb(246,218,30)"/><text x="59.6067%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="59.6491%" y="325" width="0.2924%" height="15" fill="rgb(219,145,47)"/><text x="59.8991%" y="335.50"></text></g><g><title>_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he493e0cb844aee70E.llvm.9394578744088627060 (1 samples, 0.29%)</title><rect x="68.4211%" y="373" width="0.2924%" height="15" fill="rgb(243,12,26)"/><text x="68.6711%" y="383.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (43 samples, 12.57%)</title><rect x="59.9415%" y="389" width="12.5731%" height="15" fill="rgb(214,87,16)"/><text x="60.1915%" y="399.50">aho_corasick::nfa::..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 3.80%)</title><rect x="68.7135%" y="373" width="3.8012%" height="15" fill="rgb(208,99,42)"/><text x="68.9635%" y="383.50">allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.29%)</title><rect x="72.2222%" y="357" width="0.2924%" height="15" fill="rgb(253,99,2)"/><text x="72.4722%" y="367.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="72.2222%" y="341" width="0.2924%" height="15" fill="rgb(220,168,23)"/><text x="72.4722%" y="351.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (3 samples, 0.88%)</title><rect x="72.5146%" y="389" width="0.8772%" height="15" fill="rgb(242,38,24)"/><text x="72.7646%" y="399.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (3 samples, 0.88%)</title><rect x="72.5146%" y="373" width="0.8772%" height="15" fill="rgb(225,182,9)"/><text x="72.7646%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.29%)</title><rect x="73.3918%" y="341" width="0.2924%" height="15" fill="rgb(243,178,37)"/><text x="73.6418%" y="351.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::State::set_next_state (3 samples, 0.88%)</title><rect x="73.3918%" y="389" width="0.8772%" height="15" fill="rgb(232,139,19)"/><text x="73.6418%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.88%)</title><rect x="73.3918%" y="373" width="0.8772%" height="15" fill="rgb(225,201,24)"/><text x="73.6418%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hcd6cc7d6e55edabfE.llvm.17275382644218353537 (3 samples, 0.88%)</title><rect x="73.3918%" y="357" width="0.8772%" height="15" fill="rgb(221,47,46)"/><text x="73.6418%" y="367.50"></text></g><g><title>malloc (2 samples, 0.58%)</title><rect x="73.6842%" y="341" width="0.5848%" height="15" fill="rgb(249,23,13)"/><text x="73.9342%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="73.9766%" y="325" width="0.2924%" height="15" fill="rgb(219,9,5)"/><text x="74.2266%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="73.9766%" y="309" width="0.2924%" height="15" fill="rgb(254,171,16)"/><text x="74.2266%" y="319.50"></text></g><g><title>terraphim_automata::matcher::find_matches_ids (59 samples, 17.25%)</title><rect x="57.8947%" y="437" width="17.2515%" height="15" fill="rgb(230,171,20)"/><text x="58.1447%" y="447.50">terraphim_automata::matcher..</text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (59 samples, 17.25%)</title><rect x="57.8947%" y="421" width="17.2515%" height="15" fill="rgb(210,71,41)"/><text x="58.1447%" y="431.50">aho_corasick::ahocorasick::..</text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (52 samples, 15.20%)</title><rect x="59.9415%" y="405" width="15.2047%" height="15" fill="rgb(206,173,20)"/><text x="60.1915%" y="415.50">aho_corasick::nfa::nonc..</text></g><g><title>aho_corasick::util::prefilter::opposite_ascii_case (3 samples, 0.88%)</title><rect x="74.2690%" y="389" width="0.8772%" height="15" fill="rgb(233,88,34)"/><text x="74.5190%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.29%)</title><rect x="75.1462%" y="421" width="0.2924%" height="15" fill="rgb(223,209,46)"/><text x="75.3962%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.29%)</title><rect x="75.1462%" y="405" width="0.2924%" height="15" fill="rgb(250,43,18)"/><text x="75.3962%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.29%)</title><rect x="75.1462%" y="389" width="0.2924%" height="15" fill="rgb(208,13,10)"/><text x="75.3962%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.29%)</title><rect x="75.1462%" y="373" width="0.2924%" height="15" fill="rgb(212,200,36)"/><text x="75.3962%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.29%)</title><rect x="75.1462%" y="357" width="0.2924%" height="15" fill="rgb(225,90,30)"/><text x="75.3962%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.29%)</title><rect x="75.1462%" y="341" width="0.2924%" height="15" fill="rgb(236,182,39)"/><text x="75.3962%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.29%)</title><rect x="75.1462%" y="325" width="0.2924%" height="15" fill="rgb(212,144,35)"/><text x="75.3962%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.29%)</title><rect x="75.1462%" y="309" width="0.2924%" height="15" fill="rgb(228,63,44)"/><text x="75.3962%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.29%)</title><rect x="75.1462%" y="293" width="0.2924%" height="15" fill="rgb(228,109,6)"/><text x="75.3962%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.29%)</title><rect x="75.1462%" y="277" width="0.2924%" height="15" fill="rgb(238,117,24)"/><text x="75.3962%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.29%)</title><rect x="75.1462%" y="261" width="0.2924%" height="15" fill="rgb(242,26,26)"/><text x="75.3962%" y="271.50"></text></g><g><title>malloc (1 samples, 0.29%)</title><rect x="75.1462%" y="245" width="0.2924%" height="15" fill="rgb(221,92,48)"/><text x="75.3962%" y="255.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build_auto (1 samples, 0.29%)</title><rect x="75.4386%" y="405" width="0.2924%" height="15" fill="rgb(209,209,32)"/><text x="75.6886%" y="415.50"></text></g><g><title>aho_corasick::nfa::contiguous::Builder::build_from_noncontiguous (1 samples, 0.29%)</title><rect x="75.4386%" y="389" width="0.2924%" height="15" fill="rgb(221,70,22)"/><text x="75.6886%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="75.4386%" y="373" width="0.2924%" height="15" fill="rgb(248,145,5)"/><text x="75.6886%" y="383.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::add_unanchored_start_state_loop (1 samples, 0.29%)</title><rect x="75.7310%" y="389" width="0.2924%" height="15" fill="rgb(226,116,26)"/><text x="75.9810%" y="399.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (22 samples, 6.43%)</title><rect x="76.0234%" y="389" width="6.4327%" height="15" fill="rgb(244,5,17)"/><text x="76.2734%" y="399.50">aho_cora..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 1.75%)</title><rect x="80.7018%" y="373" width="1.7544%" height="15" fill="rgb(252,159,33)"/><text x="80.9518%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.29%)</title><rect x="82.1637%" y="357" width="0.2924%" height="15" fill="rgb(206,71,0)"/><text x="82.4137%" y="367.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::State::set_next_state (2 samples, 0.58%)</title><rect x="82.4561%" y="389" width="0.5848%" height="15" fill="rgb(233,118,54)"/><text x="82.7061%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.58%)</title><rect x="82.4561%" y="373" width="0.5848%" height="15" fill="rgb(234,83,48)"/><text x="82.7061%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hcd6cc7d6e55edabfE.llvm.17275382644218353537 (2 samples, 0.58%)</title><rect x="82.4561%" y="357" width="0.5848%" height="15" fill="rgb(228,3,54)"/><text x="82.7061%" y="367.50"></text></g><g><title>malloc (2 samples, 0.58%)</title><rect x="82.4561%" y="341" width="0.5848%" height="15" fill="rgb(226,155,13)"/><text x="82.7061%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="82.7485%" y="325" width="0.2924%" height="15" fill="rgb(241,28,37)"/><text x="82.9985%" y="335.50"></text></g><g><title>terraphim_automata::matcher::replace_matches (28 samples, 8.19%)</title><rect x="75.1462%" y="437" width="8.1871%" height="15" fill="rgb(233,93,10)"/><text x="75.3962%" y="447.50">terraphim_a..</text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (27 samples, 7.89%)</title><rect x="75.4386%" y="421" width="7.8947%" height="15" fill="rgb(225,113,19)"/><text x="75.6886%" y="431.50">aho_corasic..</text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (26 samples, 7.60%)</title><rect x="75.7310%" y="405" width="7.6023%" height="15" fill="rgb(241,2,18)"/><text x="75.9810%" y="415.50">aho_corasi..</text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::set_range (1 samples, 0.29%)</title><rect x="83.0409%" y="389" width="0.2924%" height="15" fill="rgb(228,207,21)"/><text x="83.2909%" y="399.50"></text></g><g><title>terraphim_pipeline::RoleGraph::add_or_update_document (1 samples, 0.29%)</title><rect x="83.3333%" y="437" width="0.2924%" height="15" fill="rgb(213,211,35)"/><text x="83.5833%" y="447.50"></text></g><g><title>terraphim_pipeline::RoleGraph::init_or_update_node (1 samples, 0.29%)</title><rect x="83.3333%" y="421" width="0.2924%" height="15" fill="rgb(209,83,10)"/><text x="83.5833%" y="431.50"></text></g><g><title>aho_corasick::nfa::contiguous::Builder::build_from_noncontiguous (1 samples, 0.29%)</title><rect x="83.6257%" y="373" width="0.2924%" height="15" fill="rgb(209,164,1)"/><text x="83.8757%" y="383.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build_auto (2 samples, 0.58%)</title><rect x="83.6257%" y="389" width="0.5848%" height="15" fill="rgb(213,184,43)"/><text x="83.8757%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;aho_corasick::nfa::noncontiguous::NFA&gt; (1 samples, 0.29%)</title><rect x="83.9181%" y="373" width="0.2924%" height="15" fill="rgb(231,61,34)"/><text x="84.1681%" y="383.50"></text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="83.9181%" y="357" width="0.2924%" height="15" fill="rgb(235,75,3)"/><text x="84.1681%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="83.9181%" y="341" width="0.2924%" height="15" fill="rgb(220,106,47)"/><text x="84.1681%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="83.9181%" y="325" width="0.2924%" height="15" fill="rgb(210,196,33)"/><text x="84.1681%" y="335.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::add_state (2 samples, 0.58%)</title><rect x="84.2105%" y="373" width="0.5848%" height="15" fill="rgb(229,154,42)"/><text x="84.4605%" y="383.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::calculate_memory_usage (1 samples, 0.29%)</title><rect x="84.7953%" y="373" width="0.2924%" height="15" fill="rgb(228,114,26)"/><text x="85.0453%" y="383.50"></text></g><g><title>_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he493e0cb844aee70E.llvm.9394578744088627060 (1 samples, 0.29%)</title><rect x="87.7193%" y="357" width="0.2924%" height="15" fill="rgb(208,144,1)"/><text x="87.9693%" y="367.50"></text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="87.7193%" y="341" width="0.2924%" height="15" fill="rgb(239,112,37)"/><text x="87.9693%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="87.7193%" y="325" width="0.2924%" height="15" fill="rgb(210,96,50)"/><text x="87.9693%" y="335.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (19 samples, 5.56%)</title><rect x="85.0877%" y="373" width="5.5556%" height="15" fill="rgb(222,178,2)"/><text x="85.3377%" y="383.50">aho_cor..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 2.63%)</title><rect x="88.0117%" y="357" width="2.6316%" height="15" fill="rgb(226,74,18)"/><text x="88.2617%" y="367.50">al..</text></g><g><title>aho_corasick::nfa::noncontiguous::State::set_next_state (1 samples, 0.29%)</title><rect x="90.6433%" y="373" width="0.2924%" height="15" fill="rgb(225,67,54)"/><text x="90.8933%" y="383.50"></text></g><g><title>terraphim_pipeline::RoleGraph::parse_document_to_pair (26 samples, 7.60%)</title><rect x="83.6257%" y="437" width="7.6023%" height="15" fill="rgb(251,92,32)"/><text x="83.8757%" y="447.50">terraphim_..</text></g><g><title>terraphim_automata::matcher::find_matches_ids (26 samples, 7.60%)</title><rect x="83.6257%" y="421" width="7.6023%" height="15" fill="rgb(228,149,22)"/><text x="83.8757%" y="431.50">terraphim_..</text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (26 samples, 7.60%)</title><rect x="83.6257%" y="405" width="7.6023%" height="15" fill="rgb(243,54,13)"/><text x="83.8757%" y="415.50">aho_corasi..</text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (24 samples, 7.02%)</title><rect x="84.2105%" y="389" width="7.0175%" height="15" fill="rgb(243,180,28)"/><text x="84.4605%" y="399.50">aho_coras..</text></g><g><title>aho_corasick::util::alphabet::ByteClassSet::set_range (1 samples, 0.29%)</title><rect x="90.9357%" y="373" width="0.2924%" height="15" fill="rgb(208,167,24)"/><text x="91.1857%" y="383.50"></text></g><g><title>aho_corasick::nfa::contiguous::Builder::build_from_noncontiguous (1 samples, 0.29%)</title><rect x="91.2281%" y="373" width="0.2924%" height="15" fill="rgb(245,73,45)"/><text x="91.4781%" y="383.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build_auto (2 samples, 0.58%)</title><rect x="91.2281%" y="389" width="0.5848%" height="15" fill="rgb(237,203,48)"/><text x="91.4781%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;aho_corasick::nfa::noncontiguous::NFA&gt; (1 samples, 0.29%)</title><rect x="91.5205%" y="373" width="0.2924%" height="15" fill="rgb(211,197,16)"/><text x="91.7705%" y="383.50"></text></g><g><title>cfree (1 samples, 0.29%)</title><rect x="91.5205%" y="357" width="0.2924%" height="15" fill="rgb(243,99,51)"/><text x="91.7705%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="91.5205%" y="341" width="0.2924%" height="15" fill="rgb(215,123,29)"/><text x="91.7705%" y="351.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::add_state (3 samples, 0.88%)</title><rect x="91.8129%" y="373" width="0.8772%" height="15" fill="rgb(239,186,37)"/><text x="92.0629%" y="383.50"></text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::fill_failure_transitions (16 samples, 4.68%)</title><rect x="92.6901%" y="373" width="4.6784%" height="15" fill="rgb(252,136,39)"/><text x="92.9401%" y="383.50">aho_c..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.88%)</title><rect x="96.4912%" y="357" width="0.8772%" height="15" fill="rgb(223,213,32)"/><text x="96.7412%" y="367.50"></text></g><g><title>terraphim_pipel (208 samples, 60.82%)</title><rect x="36.8421%" y="709" width="60.8187%" height="15" fill="rgb(233,115,5)"/><text x="37.0921%" y="719.50">terraphim_pipel</text></g><g><title>_start (178 samples, 52.05%)</title><rect x="45.6140%" y="693" width="52.0468%" height="15" fill="rgb(207,226,44)"/><text x="45.8640%" y="703.50">_start</text></g><g><title>__libc_start_main (178 samples, 52.05%)</title><rect x="45.6140%" y="677" width="52.0468%" height="15" fill="rgb(208,126,0)"/><text x="45.8640%" y="687.50">__libc_start_main</text></g><g><title>[libc.so.6] (178 samples, 52.05%)</title><rect x="45.6140%" y="661" width="52.0468%" height="15" fill="rgb(244,66,21)"/><text x="45.8640%" y="671.50">[libc.so.6]</text></g><g><title>main (178 samples, 52.05%)</title><rect x="45.6140%" y="645" width="52.0468%" height="15" fill="rgb(222,97,12)"/><text x="45.8640%" y="655.50">main</text></g><g><title>std::rt::lang_start_internal (178 samples, 52.05%)</title><rect x="45.6140%" y="629" width="52.0468%" height="15" fill="rgb(219,213,19)"/><text x="45.8640%" y="639.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (178 samples, 52.05%)</title><rect x="45.6140%" y="613" width="52.0468%" height="15" fill="rgb(252,169,30)"/><text x="45.8640%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178 samples, 52.05%)</title><rect x="45.6140%" y="597" width="52.0468%" height="15" fill="rgb(206,32,51)"/><text x="45.8640%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178 samples, 52.05%)</title><rect x="45.6140%" y="581" width="52.0468%" height="15" fill="rgb(250,172,42)"/><text x="45.8640%" y="591.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (178 samples, 52.05%)</title><rect x="45.6140%" y="565" width="52.0468%" height="15" fill="rgb(209,34,43)"/><text x="45.8640%" y="575.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (178 samples, 52.05%)</title><rect x="45.6140%" y="549" width="52.0468%" height="15" fill="rgb(223,11,35)"/><text x="45.8640%" y="559.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178 samples, 52.05%)</title><rect x="45.6140%" y="533" width="52.0468%" height="15" fill="rgb(251,219,26)"/><text x="45.8640%" y="543.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178 samples, 52.05%)</title><rect x="45.6140%" y="517" width="52.0468%" height="15" fill="rgb(231,119,3)"/><text x="45.8640%" y="527.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (178 samples, 52.05%)</title><rect x="45.6140%" y="501" width="52.0468%" height="15" fill="rgb(216,97,11)"/><text x="45.8640%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h982c1eb1e04c2cb5E.llvm.1430093940171669949 (178 samples, 52.05%)</title><rect x="45.6140%" y="485" width="52.0468%" height="15" fill="rgb(223,59,9)"/><text x="45.8640%" y="495.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h982c1eb1e04c2cb5E.llvm.14300939..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (178 samples, 52.05%)</title><rect x="45.6140%" y="469" width="52.0468%" height="15" fill="rgb(233,93,31)"/><text x="45.8640%" y="479.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>terraphim_pipeline::main (178 samples, 52.05%)</title><rect x="45.6140%" y="453" width="52.0468%" height="15" fill="rgb(239,81,33)"/><text x="45.8640%" y="463.50">terraphim_pipeline::main</text></g><g><title>terraphim_pipeline::RoleGraph::query (22 samples, 6.43%)</title><rect x="91.2281%" y="437" width="6.4327%" height="15" fill="rgb(213,120,34)"/><text x="91.4781%" y="447.50">terraphi..</text></g><g><title>terraphim_automata::matcher::find_matches_ids (22 samples, 6.43%)</title><rect x="91.2281%" y="421" width="6.4327%" height="15" fill="rgb(243,49,53)"/><text x="91.4781%" y="431.50">terraphi..</text></g><g><title>aho_corasick::ahocorasick::AhoCorasickBuilder::build (22 samples, 6.43%)</title><rect x="91.2281%" y="405" width="6.4327%" height="15" fill="rgb(247,216,33)"/><text x="91.4781%" y="415.50">aho_cora..</text></g><g><title>aho_corasick::nfa::noncontiguous::Builder::build (20 samples, 5.85%)</title><rect x="91.8129%" y="389" width="5.8480%" height="15" fill="rgb(226,26,14)"/><text x="92.0629%" y="399.50">aho_cor..</text></g><g><title>aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 0.29%)</title><rect x="97.3684%" y="373" width="0.2924%" height="15" fill="rgb(215,49,53)"/><text x="97.6184%" y="383.50"></text></g><g><title>aho_corasick::util::remapper::Remapper::remap (1 samples, 0.29%)</title><rect x="97.3684%" y="357" width="0.2924%" height="15" fill="rgb(245,162,40)"/><text x="97.6184%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.58%)</title><rect x="97.9532%" y="645" width="0.5848%" height="15" fill="rgb(229,68,17)"/><text x="98.2032%" y="655.50"></text></g><g><title>__getdelim (1 samples, 0.29%)</title><rect x="98.2456%" y="629" width="0.2924%" height="15" fill="rgb(213,182,10)"/><text x="98.4956%" y="639.50"></text></g><g><title>_IO_file_underflow (1 samples, 0.29%)</title><rect x="98.2456%" y="613" width="0.2924%" height="15" fill="rgb(245,125,30)"/><text x="98.4956%" y="623.50"></text></g><g><title>_IO_doallocbuf (1 samples, 0.29%)</title><rect x="98.2456%" y="597" width="0.2924%" height="15" fill="rgb(232,202,2)"/><text x="98.4956%" y="607.50"></text></g><g><title>_IO_file_doallocate (1 samples, 0.29%)</title><rect x="98.2456%" y="581" width="0.2924%" height="15" fill="rgb(237,140,51)"/><text x="98.4956%" y="591.50"></text></g><g><title>_IO_file_stat (1 samples, 0.29%)</title><rect x="98.2456%" y="565" width="0.2924%" height="15" fill="rgb(236,157,25)"/><text x="98.4956%" y="575.50"></text></g><g><title>all (342 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(219,209,0)"/><text x="0.2500%" y="735.50"></text></g><g><title>tokio-runtime-w (8 samples, 2.34%)</title><rect x="97.6608%" y="709" width="2.3392%" height="15" fill="rgb(240,116,54)"/><text x="97.9108%" y="719.50">t..</text></g><g><title>[anon] (8 samples, 2.34%)</title><rect x="97.6608%" y="693" width="2.3392%" height="15" fill="rgb(216,10,36)"/><text x="97.9108%" y="703.50">[..</text></g><g><title>getaddrinfo (8 samples, 2.34%)</title><rect x="97.6608%" y="677" width="2.3392%" height="15" fill="rgb(222,72,44)"/><text x="97.9108%" y="687.50">g..</text></g><g><title>[libc.so.6] (8 samples, 2.34%)</title><rect x="97.6608%" y="661" width="2.3392%" height="15" fill="rgb(232,159,9)"/><text x="97.9108%" y="671.50">[..</text></g><g><title>_nss_dns_gethostbyname4_r (5 samples, 1.46%)</title><rect x="98.5380%" y="645" width="1.4620%" height="15" fill="rgb(210,39,32)"/><text x="98.7880%" y="655.50"></text></g><g><title>__res_context_search (5 samples, 1.46%)</title><rect x="98.5380%" y="629" width="1.4620%" height="15" fill="rgb(216,194,45)"/><text x="98.7880%" y="639.50"></text></g><g><title>__res_context_query (5 samples, 1.46%)</title><rect x="98.5380%" y="613" width="1.4620%" height="15" fill="rgb(218,18,35)"/><text x="98.7880%" y="623.50"></text></g><g><title>__res_context_send (5 samples, 1.46%)</title><rect x="98.5380%" y="597" width="1.4620%" height="15" fill="rgb(207,83,51)"/><text x="98.7880%" y="607.50"></text></g><g><title>__poll (5 samples, 1.46%)</title><rect x="98.5380%" y="581" width="1.4620%" height="15" fill="rgb(225,63,43)"/><text x="98.7880%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.29%)</title><rect x="99.7076%" y="565" width="0.2924%" height="15" fill="rgb(207,57,36)"/><text x="99.9576%" y="575.50"></text></g></svg></svg>