// This file is auto-generated by tsify. Do not edit manually.
// Run `cargo run --bin generate-bindings` to regenerate.

// === Core Types ===
export interface RoleName {
    original: string;
    lowercase: string;
}
export type NormalizedTermValue = string;
export interface Document {
    id: string;
    url: string;
    title: string;
    body: string;
    description: string | undefined;
    stub: string | undefined;
    tags: string[] | undefined;
    rank: number | undefined;
}
export interface SearchQuery {
    search_term: NormalizedTermValue;
    skip: number | undefined;
    limit: number | undefined;
    role: RoleName | undefined;
}
export type RelevanceFunction = "terraphim-graph" | "title-scorer";
export type KnowledgeGraphInputType = "markdown" | "json";
// === Automata Types ===
export type AutomataPath = { Local: string } | { Remote: string };
// === Configuration Types ===
export type ServiceType = "Ripgrep" | "Atomic";
export interface Haystack {
    location: string;
    service: ServiceType;
    read_only?: boolean;
    atomic_server_secret?: string | undefined;
    extra_parameters?: Map<string, string>;
}
export interface KnowledgeGraphLocal {
    input_type: KnowledgeGraphInputType;
    path: string;
}
export interface KnowledgeGraph {
    automata_path: AutomataPath | undefined;
    knowledge_graph_local: KnowledgeGraphLocal | undefined;
    public: boolean;
    publish: boolean;
}
export interface Role extends AHashMap<string, Value> {
    shortname: string | undefined;
    name: RoleName;
    relevance_function: RelevanceFunction;
    theme: string;
    kg: KnowledgeGraph | undefined;
    haystacks: Haystack[];
}
export type ConfigId = "Server" | "Desktop" | "Embedded";
export interface Config {
    id: ConfigId;
    global_shortcut: string;
    roles: AHashMap<RoleName, Role>;
    default_role: RoleName;
    selected_role: RoleName;
}
// === Command Response Types ===
export type Status = "success" | "error";
export interface ConfigResponse {
    status: Status;
    config: Config;
}
export interface SearchResponse {
    status: Status;
    results: Document[];
}
export interface DocumentResponse {
    status: Status;
    document: Document | undefined;
}
export interface InitialSettings {
    data_folder: string;
    global_shortcut: string;
}
// === Role Graph Visualization Types ===
export interface GraphNodeDto {
    id: number;
    label: string;
    rank: number;
}
export interface GraphEdgeDto {
    source: number;
    target: number;
    weight: number;
}
export interface RoleGraphResponse {
    status: Status;
    nodes: GraphNodeDto[];
    edges: GraphEdgeDto[];
}
