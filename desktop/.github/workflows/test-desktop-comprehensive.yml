---
name: Desktop App Comprehensive Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'desktop/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'desktop/**' ]

env:
  WORKING_DIRECTORY: ./desktop

jobs:
  # Backend Rust Tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Backend Tests
        working-directory: ${{ env.WORKING_DIRECTORY }}/src-tauri
        run: cargo test --verbose

      - name: Run Backend Tests with Coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}/src-tauri
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out xml --output-dir coverage

      - name: Upload Backend Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./desktop/src-tauri/coverage/cobertura.xml
          flags: backend
          name: backend-coverage

  # Frontend Unit Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/yarn.lock

      - name: Install Dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --frozen-lockfile

      - name: Run Frontend Tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn test

      - name: Run Frontend Tests with Coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn test:coverage

      - name: Upload Frontend Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./desktop/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/yarn.lock

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev pkg-config

      - name: Install Dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npx playwright install --with-deps

      - name: Build Application
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn build

      - name: Run E2E Tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn e2e
        env:
          CI: true
