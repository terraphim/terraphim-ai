server_hostname = "${TERRAPHIM_SERVER_HOSTNAME:-127.0.0.1:8000}"
api_endpoint="${TERRAPHIM_SERVER_API_ENDPOINT:-http://localhost:8000/api}"
initialized = "${TERRAPHIM_INITIALIZED:-false}"

[profiles.s3]
type = "s3"
bucket = "test"
region = "${TERRAPHIM_PROFILE_S3_REGION:-us-east-1}"
endpoint = "${TERRAPHIM_PROFILE_S3_ENDPOINT:-http://rpi4node3:8333/}"
access_key_id = "${AWS_ACCESS_KEY_ID}"
secret_access_key = "${AWS_SECRET_ACCESS_KEY}"

[profiles.sled]
type = "sled"
datadir= "/tmp/opendal/sled"

[profiles.dash]
type = "dashmap"
root = "/tmp/dashmaptest"

# Optional database backends - uncomment if RocksDB feature is enabled
# [profiles.rock]
# type = "rocksdb"
# datadir = "/tmp/opendal/rocksdb" 

[profiles.memory]
type = "memory"

[profiles.atomicserver]
endpoint = "${TERRAPHIM_PROFILE_ATOMICSERVER}"
type = "atomicserver"
private_key = "${TERRAPHIM_PROFILE_ATOMICSERVER_PRIVATE_KEY}"
public_key = "${TERRAPHIM_PROFILE_ATOMICSERVER_PUBLIC_KEY}"
parent_resource_id="${TERRAPHIM_PROFILE_ATOMICSERVER}"

# Rust Engineer role configuration - specialized for Rust development with external API
[roles.RustEngineer]
shortname = "rust-engineer"
name = "Rust Engineer"
relevance_function = "title-scorer"
terraphim_it = false
theme = "cosmo"

[[roles.RustEngineer.haystacks]]
location = "https://query.rs"
service = "QueryRs"
read_only = true

[roles.RustEngineer.haystacks.extra_parameters]

# Fallback local haystack for Rust Engineer
[[roles.RustEngineer.haystacks]]
location = "docs/src"
service = "Ripgrep"
read_only = true

[roles.RustEngineer.haystacks.extra_parameters]