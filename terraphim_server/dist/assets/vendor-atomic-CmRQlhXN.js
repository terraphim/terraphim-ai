import{ab as Ht,ac as ce,ad as pt}from"./vendor-ui-CSKub_21.js";const Et=new Map;function pe(...s){for(const t of s){for(const[e,r]of Object.entries(t.classes))Et.set(r,e);for(const[e,r]of Object.entries(t.properties))Et.set(r,e)}}function de(s){return Et.get(s)}const U={classes:{class:"https://atomicdata.dev/classes/Class",property:"https://atomicdata.dev/classes/Property",agent:"https://atomicdata.dev/classes/Agent",datatype:"https://atomicdata.dev/classes/Datatype",ontology:"https://atomicdata.dev/class/ontology"},properties:{allowsOnly:"https://atomicdata.dev/properties/allowsOnly",classtype:"https://atomicdata.dev/properties/classtype",datatype:"https://atomicdata.dev/properties/datatype",description:"https://atomicdata.dev/properties/description",incomplete:"https://atomicdata.dev/properties/incomplete",isA:"https://atomicdata.dev/properties/isA",isDynamic:"https://atomicdata.dev/properties/isDynamic",name:"https://atomicdata.dev/properties/name",parent:"https://atomicdata.dev/properties/parent",read:"https://atomicdata.dev/properties/read",recommends:"https://atomicdata.dev/properties/recommends",requires:"https://atomicdata.dev/properties/requires",shortname:"https://atomicdata.dev/properties/shortname",write:"https://atomicdata.dev/properties/write",publicKey:"https://atomicdata.dev/properties/publicKey",instances:"https://atomicdata.dev/properties/instances",properties:"https://atomicdata.dev/properties/properties",classes:"https://atomicdata.dev/properties/classes",isLocked:"https://atomicdata.dev/properties/isLocked",localId:"https://atomicdata.dev/properties/localId"}},he={classes:{commit:"https://atomicdata.dev/classes/Commit"},properties:{subject:"https://atomicdata.dev/properties/subject",createdAt:"https://atomicdata.dev/properties/createdAt",lastCommit:"https://atomicdata.dev/properties/lastCommit",previousCommit:"https://atomicdata.dev/properties/previousCommit",signer:"https://atomicdata.dev/properties/signer",set:"https://atomicdata.dev/properties/set",push:"https://atomicdata.dev/properties/push",remove:"https://atomicdata.dev/properties/remove",destroy:"https://atomicdata.dev/properties/destroy",signature:"https://atomicdata.dev/properties/signature"}},Jt={classes:{collection:"https://atomicdata.dev/classes/Collection"},properties:{members:"https://atomicdata.dev/properties/collection/members",currentPage:"https://atomicdata.dev/properties/collection/currentPage",pageSize:"https://atomicdata.dev/properties/collection/pageSize",property:"https://atomicdata.dev/properties/collection/property",totalMembers:"https://atomicdata.dev/properties/collection/totalMembers",totalPages:"https://atomicdata.dev/properties/collection/totalPages",value:"https://atomicdata.dev/properties/collection/value",sortBy:"https://atomicdata.dev/properties/collection/sortBy",sortDesc:"https://atomicdata.dev/properties/collection/sortDesc",includeExternal:"https://atomicdata.dev/properties/collection/includeExternal"}},le={classes:{article:"https://atomicdata.dev/classes/Article",bookmark:"https://atomicdata.dev/class/Bookmark",chatroom:"https://atomicdata.dev/classes/ChatRoom",currencyProperty:"https://atomicdata.dev/ontology/data-browser/class/currency-property",dateFormat:"https://atomicdata.dev/classes/DateFormat",displayStyle:"https://atomicdata.dev/class/DisplayStyle",document:"https://atomicdata.dev/classes/Document",floatRangeProperty:"https://atomicdata.dev/classes/FloatRangeProperty",folder:"https://atomicdata.dev/classes/Folder",formattedDate:"https://atomicdata.dev/classes/FormattedDate",formattedNumber:"https://atomicdata.dev/classes/FormattedNumber",importer:"https://atomicdata.dev/classes/Importer",message:"https://atomicdata.dev/classes/Message",numberFormat:"https://atomicdata.dev/classes/NumberFormat",paragraph:"https://atomicdata.dev/classes/elements/Paragraph",rangeProperty:"https://atomicdata.dev/classes/RangeProperty",selectProperty:"https://atomicdata.dev/classes/SelectProperty",table:"https://atomicdata.dev/classes/Table",tag:"https://atomicdata.dev/classes/Tag",template:"https://atomicdata.dev/ontology/data-browser/class/template"},properties:{color:"https://atomicdata.dev/properties/color",currency:"https://atomicdata.dev/ontology/data-browser/property/currency",customNodePositioning:"https://atomicdata.dev/properties/custom-node-positioning",dateFormat:"https://atomicdata.dev/properties/dateFormat",decimalPlaces:"https://atomicdata.dev/properties/decimalPlaces",displayStyle:"https://atomicdata.dev/property/display-style",elements:"https://atomicdata.dev/properties/documents/elements",emoji:"https://atomicdata.dev/properties/emoji",image:"https://atomicdata.dev/ontology/data-browser/property/image",imageUrl:"https://atomicdata.dev/properties/imageUrl",max:"https://atomicdata.dev/properties/max",maxFloat:"https://atomicdata.dev/properties/maxFloat",messages:"https://atomicdata.dev/properties/messages",min:"https://atomicdata.dev/properties/min",minFloat:"https://atomicdata.dev/properties/minFloat",nextPage:"https://atomicdata.dev/properties/nextPage",numberFormatting:"https://atomicdata.dev/properties/numberFormatting",preview:"https://atomicdata.dev/property/preview",publishedAt:"https://atomicdata.dev/properties/published-at",replyTo:"https://atomicdata.dev/properties/replyTo",resources:"https://atomicdata.dev/ontology/data-browser/property/resources",subResources:"https://atomicdata.dev/properties/subresources",tableColumnWidths:"https://atomicdata.dev/properties/tableColumnWidths",tags:"https://atomicdata.dev/properties/tags",url:"https://atomicdata.dev/property/url"}},Pt={classes:{error:"https://atomicdata.dev/classes/Error",endpoint:"https://atomicdata.dev/classes/Endpoint",drive:"https://atomicdata.dev/classes/Drive",redirect:"https://atomicdata.dev/classes/Redirect",file:"https://atomicdata.dev/classes/File",invite:"https://atomicdata.dev/classes/Invite",endpointResponse:"https://atomicdata.dev/ontology/server/class/endpoint-response"},properties:{drives:"https://atomicdata.dev/properties/drives",results:"https://atomicdata.dev/properties/endpoint/results",property:"https://atomicdata.dev/properties/search/property",redirectAgent:"https://atomicdata.dev/properties/invite/redirectAgent",agent:"https://atomicdata.dev/properties/invite/agent",publicKey:"https://atomicdata.dev/properties/invite/publicKey",target:"https://atomicdata.dev/properties/invite/target",usagesLeft:"https://atomicdata.dev/properties/invite/usagesLeft",users:"https://atomicdata.dev/properties/invite/users",write:"https://atomicdata.dev/properties/invite/write",filename:"https://atomicdata.dev/properties/filename",filesize:"https://atomicdata.dev/properties/filesize",downloadUrl:"https://atomicdata.dev/properties/downloadURL",mimetype:"https://atomicdata.dev/properties/mimetype",attachments:"https://atomicdata.dev/properties/attachments",createdBy:"https://atomicdata.dev/properties/createdBy",checksum:"https://atomicdata.dev/properties/checksum",internalId:"https://atomicdata.dev/properties/internalId",children:"https://atomicdata.dev/properties/children",parameters:"https://atomicdata.dev/properties/endpoint/parameters",destination:"https://atomicdata.dev/properties/destination",status:"https://atomicdata.dev/ontology/server/property/status",responseMessage:"https://atomicdata.dev/ontology/server/property/response-message",defaultOntology:"https://atomicdata.dev/ontology/server/property/default-ontology",imageWidth:"https://atomicdata.dev/properties/imageWidth",imageHeight:"https://atomicdata.dev/properties/imageHeight"}};function ue(){pe(U,he,Jt,le,Pt)}function me(){return globalThis===globalThis.window}const fe={};/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */const E=BigInt(0),v=BigInt(1),R=BigInt(2),Kt=BigInt(255),ve=R**BigInt(252)+BigInt("27742317777372353535851937790883648493"),A={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:R**Kt-BigInt(19),l:ve,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")},Gt=R**BigInt(256),Y=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742");const ge=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),ye=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),be=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),we=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class b{constructor(t,e,r,a){this.x=t,this.y=e,this.z=r,this.t=a}static fromAffine(t){if(!(t instanceof S))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return t.equals(S.ZERO)?b.ZERO:new b(t.x,t.y,v,c(t.x*t.y))}static toAffineBatch(t){const e=Se(t.map(r=>r.z));return t.map((r,a)=>r.toAffine(e[a]))}static normalizeZ(t){return this.toAffineBatch(t).map(this.fromAffine)}equals(t){kt(t);const{x:e,y:r,z:a}=this,{x:i,y:o,z:n}=t,p=c(e*n),h=c(i*a),u=c(r*n),l=c(o*a);return p===h&&u===l}negate(){return new b(c(-this.x),this.y,this.z,c(-this.t))}double(){const{x:t,y:e,z:r}=this,{a}=A,i=c(t**R),o=c(e**R),n=c(R*c(r**R)),p=c(a*i),h=c(c((t+e)**R)-i-o),u=p+o,l=u-n,d=p-o,f=c(h*l),m=c(u*d),g=c(h*d),x=c(l*u);return new b(f,m,x,g)}add(t){kt(t);const{x:e,y:r,z:a,t:i}=this,{x:o,y:n,z:p,t:h}=t,u=c((r-e)*(n+o)),l=c((r+e)*(n-o)),d=c(l-u);if(d===E)return this.double();const f=c(a*R*h),m=c(i*R*p),g=m+f,x=l+u,j=m-f,F=c(g*d),w=c(x*j),O=c(g*j),N=c(d*x);return new b(F,w,N,O)}subtract(t){return this.add(t.negate())}precomputeWindow(t){const e=1+256/t,r=[];let a=this,i=a;for(let o=0;o<e;o++){i=a,r.push(i);for(let n=1;n<2**(t-1);n++)i=i.add(a),r.push(i);a=i.double()}return r}wNAF(t,e){!e&&this.equals(b.BASE)&&(e=S.BASE);const r=e&&e._WINDOW_SIZE||1;if(256%r)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let a=e&&Rt.get(e);a||(a=this.precomputeWindow(r),e&&r!==1&&(a=b.normalizeZ(a),Rt.set(e,a)));let i=b.ZERO,o=b.ZERO;const n=1+256/r,p=2**(r-1),h=BigInt(2**r-1),u=2**r,l=BigInt(r);for(let d=0;d<n;d++){const f=d*p;let m=Number(t&h);if(t>>=l,m>p&&(m-=u,t+=v),m===0){let g=a[f];d%2&&(g=g.negate()),o=o.add(g)}else{let g=a[f+Math.abs(m)-1];m<0&&(g=g.negate()),i=i.add(g)}}return b.normalizeZ([i,o])[0]}multiply(t,e){return this.wNAF(dt(t,A.l),e)}multiplyUnsafe(t){let e=dt(t,A.l,!1);const r=b.BASE,a=b.ZERO;if(e===E)return a;if(this.equals(a)||e===v)return this;if(this.equals(r))return this.wNAF(e);let i=a,o=this;for(;e>E;)e&v&&(i=i.add(o)),o=o.double(),e>>=v;return i}isSmallOrder(){return this.multiplyUnsafe(A.h).equals(b.ZERO)}isTorsionFree(){return this.multiplyUnsafe(A.l).equals(b.ZERO)}toAffine(t=lt(this.z)){const{x:e,y:r,z:a}=this,i=c(e*t),o=c(r*t);if(c(a*t)!==v)throw new Error("invZ was invalid");return new S(i,o)}fromRistrettoBytes(){wt()}toRistrettoBytes(){wt()}fromRistrettoHash(){wt()}}b.BASE=new b(A.Gx,A.Gy,v,c(A.Gx*A.Gy));b.ZERO=new b(E,v,v,E);function kt(s){if(!(s instanceof b))throw new TypeError("ExtendedPoint expected")}function bt(s){if(!(s instanceof C))throw new TypeError("RistrettoPoint expected")}function wt(){throw new Error("Legacy method: switch to RistrettoPoint")}class C{constructor(t){this.ep=t}static calcElligatorRistrettoMap(t){const{d:e}=A,r=c(Y*t*t),a=c((r+v)*be);let i=BigInt(-1);const o=c((i-e*r)*c(r+e));let{isValid:n,value:p}=Ct(a,o),h=c(p*t);V(h)||(h=c(-h)),n||(p=h),n||(i=r);const u=c(i*(r-v)*we-o),l=p*p,d=c((p+p)*o),f=c(u*ge),m=c(v-l),g=c(v+l);return new b(c(d*g),c(m*f),c(f*g),c(d*m))}static hashToCurve(t){t=H(t,64);const e=xt(t.slice(0,32)),r=this.calcElligatorRistrettoMap(e),a=xt(t.slice(32,64)),i=this.calcElligatorRistrettoMap(a);return new C(r.add(i))}static fromHex(t){t=H(t,32);const{a:e,d:r}=A,a="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",i=xt(t);if(!Re(tt(i),t)||V(i))throw new Error(a);const o=c(i*i),n=c(v+e*o),p=c(v-e*o),h=c(n*n),u=c(p*p),l=c(e*r*h-u),{isValid:d,value:f}=Dt(c(l*u)),m=c(f*p),g=c(f*m*l);let x=c((i+i)*m);V(x)&&(x=c(-x));const j=c(n*g),F=c(x*j);if(!d||V(F)||j===E)throw new Error(a);return new C(new b(x,j,v,F))}toRawBytes(){let{x:t,y:e,z:r,t:a}=this.ep;const i=c(c(r+e)*c(r-e)),o=c(t*e),{value:n}=Dt(c(i*o**R)),p=c(n*i),h=c(n*o),u=c(p*h*a);let l;if(V(a*u)){let f=c(e*Y),m=c(t*Y);t=f,e=m,l=c(p*ye)}else l=h;V(t*u)&&(e=c(-e));let d=c((r-e)*l);return V(d)&&(d=c(-d)),tt(d)}toHex(){return st(this.toRawBytes())}toString(){return this.toHex()}equals(t){bt(t);const e=this.ep,r=t.ep,a=c(e.x*r.y)===c(e.y*r.x),i=c(e.y*r.y)===c(e.x*r.x);return a||i}add(t){return bt(t),new C(this.ep.add(t.ep))}subtract(t){return bt(t),new C(this.ep.subtract(t.ep))}multiply(t){return new C(this.ep.multiply(t))}multiplyUnsafe(t){return new C(this.ep.multiplyUnsafe(t))}}C.BASE=new C(b.BASE);C.ZERO=new C(b.ZERO);const Rt=new WeakMap;class S{constructor(t,e){this.x=t,this.y=e}_setWindowSize(t){this._WINDOW_SIZE=t,Rt.delete(this)}static fromHex(t,e=!0){const{d:r,P:a}=A;t=H(t,32);const i=t.slice();i[31]=t[31]&-129;const o=W(i);if(e&&o>=a)throw new Error("Expected 0 < hex < P");if(!e&&o>=Gt)throw new Error("Expected 0 < hex < 2**256");const n=c(o*o),p=c(n-v),h=c(r*n+v);let{isValid:u,value:l}=Ct(p,h);if(!u)throw new Error("Point.fromHex: invalid y coordinate");const d=(l&v)===v;return(t[31]&128)!==0!==d&&(l=c(-l)),new S(l,o)}static async fromPrivateKey(t){return(await ut(t)).point}toRawBytes(){const t=tt(this.y);return t[31]|=this.x&v?128:0,t}toHex(){return st(this.toRawBytes())}toX25519(){const{y:t}=this,e=c((v+t)*lt(v-t));return tt(e)}isTorsionFree(){return b.fromAffine(this).isTorsionFree()}equals(t){return this.x===t.x&&this.y===t.y}negate(){return new S(c(-this.x),this.y)}add(t){return b.fromAffine(this).add(b.fromAffine(t)).toAffine()}subtract(t){return this.add(t.negate())}multiply(t){return b.fromAffine(this).multiply(t,this).toAffine()}}S.BASE=new S(A.Gx,A.Gy);S.ZERO=new S(E,v);class jt{constructor(t,e){this.r=t,this.s=e,this.assertValidity()}static fromHex(t){const e=H(t,64),r=S.fromHex(e.slice(0,32),!1),a=W(e.slice(32,64));return new jt(r,a)}assertValidity(){const{r:t,s:e}=this;if(!(t instanceof S))throw new Error("Expected Point instance");return dt(e,A.l,!1),this}toRawBytes(){const t=new Uint8Array(64);return t.set(this.r.toRawBytes()),t.set(tt(this.s),32),t}toHex(){return st(this.toRawBytes())}}function xe(...s){if(!s.every(r=>r instanceof Uint8Array))throw new Error("Expected Uint8Array list");if(s.length===1)return s[0];const t=s.reduce((r,a)=>r+a.length,0),e=new Uint8Array(t);for(let r=0,a=0;r<s.length;r++){const i=s[r];e.set(i,a),a+=i.length}return e}const Ae=Array.from({length:256},(s,t)=>t.toString(16).padStart(2,"0"));function st(s){if(!(s instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let e=0;e<s.length;e++)t+=Ae[s[e]];return t}function Wt(s){if(typeof s!="string")throw new TypeError("hexToBytes: expected string, got "+typeof s);if(s.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(s.length/2);for(let e=0;e<t.length;e++){const r=e*2,a=s.slice(r,r+2),i=Number.parseInt(a,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");t[e]=i}return t}function qt(s){const t=s.toString(16).padStart(64,"0");return Wt(t)}function tt(s){return qt(s).reverse()}function V(s){return(c(s)&v)===v}function W(s){if(!(s instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+st(Uint8Array.from(s).reverse()))}function xt(s){return c(W(s)&R**Kt-v)}function c(s,t=A.P){const e=s%t;return e>=E?e:t+e}function lt(s,t=A.P){if(s===E||t<=E)throw new Error(`invert: expected positive integers, got n=${s} mod=${t}`);let e=c(s,t),r=t,a=E,i=v;for(;e!==E;){const o=r/e,n=r%e,p=a-i*o;r=e,e=n,a=i,i=p}if(r!==v)throw new Error("invert: does not exist");return c(a,t)}function Se(s,t=A.P){const e=new Array(s.length),r=s.reduce((i,o,n)=>o===E?i:(e[n]=i,c(i*o,t)),v),a=lt(r,t);return s.reduceRight((i,o,n)=>o===E?i:(e[n]=c(i*e[n],t),c(i*o,t)),a),e}function I(s,t){const{P:e}=A;let r=s;for(;t-- >E;)r*=r,r%=e;return r}function Ee(s){const{P:t}=A,e=BigInt(5),r=BigInt(10),a=BigInt(20),i=BigInt(40),o=BigInt(80),n=s*s%t*s%t,p=I(n,R)*n%t,h=I(p,v)*s%t,u=I(h,e)*h%t,l=I(u,r)*u%t,d=I(l,a)*l%t,f=I(d,i)*d%t,m=I(f,o)*f%t,g=I(m,o)*f%t,x=I(g,r)*u%t;return{pow_p_5_8:I(x,R)*s%t,b2:n}}function Ct(s,t){const e=c(t*t*t),r=c(e*e*t),a=Ee(s*r).pow_p_5_8;let i=c(s*e*a);const o=c(t*i*i),n=i,p=c(i*Y),h=o===s,u=o===c(-s),l=o===c(-s*Y);return h&&(i=n),(u||l)&&(i=p),V(i)&&(i=c(-i)),{isValid:h||u,value:i}}function Dt(s){return Ct(v,s)}async function _t(...s){const t=await mt.sha512(xe(...s)),e=W(t);return c(e,A.l)}function Re(s,t){if(s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function H(s,t){const e=s instanceof Uint8Array?Uint8Array.from(s):Wt(s);if(typeof t=="number"&&e.length!==t)throw new Error(`Expected ${t} bytes`);return e}function dt(s,t,e=!0){if(!t)throw new TypeError("Specify max value");if(typeof s=="number"&&Number.isSafeInteger(s)&&(s=BigInt(s)),typeof s=="bigint"&&s<t){if(e){if(E<s)return s}else if(E<=s)return s}throw new TypeError("Expected valid scalar: 0 < scalar < max")}function Pe(s){return s[0]&=248,s[31]&=127,s[31]|=64,s}async function ut(s){if(s=typeof s=="bigint"||typeof s=="number"?qt(dt(s,Gt)):H(s),s.length!==32)throw new Error("Expected 32 bytes");const t=await mt.sha512(s),e=Pe(t.slice(0,32)),r=t.slice(32,64),a=c(W(e),A.l),i=S.BASE.multiply(a),o=i.toRawBytes();return{head:e,prefix:r,scalar:a,point:i,pointBytes:o}}async function je(s){return(await ut(s)).pointBytes}async function Ce(s,t){s=H(s);const{prefix:e,scalar:r,pointBytes:a}=await ut(t),i=await _t(e,s),o=S.BASE.multiply(i),n=await _t(o.toRawBytes(),a,s),p=c(i+n*r,A.l);return new jt(o,p).toRawBytes()}S.BASE._setWindowSize(8);const M={node:fe,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},mt={TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],bytesToHex:st,getExtendedPublicKey:ut,mod:c,invert:lt,hashToPrivateScalar:s=>{if(s=H(s),s.length<40||s.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const t=c(W(s),A.l);if(t===E||t===v)throw new Error("Invalid private key");return t},randomBytes:(s=32)=>{if(M.web)return M.web.getRandomValues(new Uint8Array(s));if(M.node){const{randomBytes:t}=M.node;return new Uint8Array(t(s).buffer)}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>mt.randomBytes(32),sha512:async s=>{if(M.web){const t=await M.web.subtle.digest("SHA-512",s.buffer);return new Uint8Array(t)}else{if(M.node)return Uint8Array.from(M.node.createHash("sha512").update(s).digest());throw new Error("The environment doesn't have sha512 function")}},precompute(s=8,t=S.BASE){const e=t.equals(S.BASE)?t:new S(t.x,t.y);return e._setWindowSize(s),e.multiply(R),e}};function Be(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var Ue=function(s,t){t||(t={}),typeof t=="function"&&(t={cmp:t});var e=typeof t.cycles=="boolean"?t.cycles:!1,r=t.cmp&&function(i){return function(o){return function(n,p){var h={key:n,value:o[n]},u={key:p,value:o[p]};return i(h,u)}}}(t.cmp),a=[];return function i(o){if(o&&o.toJSON&&typeof o.toJSON=="function"&&(o=o.toJSON()),o!==void 0){if(typeof o=="number")return isFinite(o)?""+o:"null";if(typeof o!="object")return JSON.stringify(o);var n,p;if(Array.isArray(o)){for(p="[",n=0;n<o.length;n++)n&&(p+=","),p+=i(o[n])||"null";return p+"]"}if(o===null)return"null";if(a.indexOf(o)!==-1){if(e)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var h=a.push(o)-1,u=Object.keys(o).sort(r&&r(o));for(p="",n=0;n<u.length;n++){var l=u[n],d=i(o[l]);d&&(p&&(p+=","),p+=JSON.stringify(l)+":"+d)}return a.splice(h,1),"{"+p+"}"}}(s)};const Fe=Be(Ue);var G="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Z=typeof Uint8Array>"u"?[]:new Uint8Array(256);for(var it=0;it<G.length;it++)Z[G.charCodeAt(it)]=it;var Zt=function(s){var t=new Uint8Array(s),e,r=t.length,a="";for(e=0;e<r;e+=3)a+=G[t[e]>>2],a+=G[(t[e]&3)<<4|t[e+1]>>4],a+=G[(t[e+1]&15)<<2|t[e+2]>>6],a+=G[t[e+2]&63];return r%3===2?a=a.substring(0,a.length-1)+"=":r%3===1&&(a=a.substring(0,a.length-2)+"=="),a},Qt=function(s){var t=s.length*.75,e=s.length,r,a=0,i,o,n,p;s[s.length-1]==="="&&(t--,s[s.length-2]==="="&&t--);var h=new ArrayBuffer(t),u=new Uint8Array(h);for(r=0;r<e;r+=4)i=Z[s.charCodeAt(r)],o=Z[s.charCodeAt(r+1)],n=Z[s.charCodeAt(r+2)],p=Z[s.charCodeAt(r+3)],u[a++]=i<<2|o>>4,u[a++]=(o&15)<<4|n>>2,u[a++]=(n&3)<<6|p&63;return h};/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */const At=s=>new DataView(s.buffer,s.byteOffset,s.byteLength),Oe=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!Oe)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},(s,t)=>t.toString(16).padStart(2,"0"));(()=>{const s=typeof module<"u"&&typeof module.require=="function"&&module.require.bind(module);try{if(s){const{setImmediate:t}=s("timers");return()=>new Promise(e=>t(e))}}catch{}return()=>new Promise(t=>setTimeout(t,0))})();function Ne(s){if(typeof s!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof s}`);return new TextEncoder().encode(s)}function Yt(s){if(typeof s=="string"&&(s=Ne(s)),!(s instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof s})`);return s}class Ie{clone(){return this._cloneInto()}}function Bt(s){const t=r=>s().update(Yt(r)).digest(),e=s();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>s(),t.init=t.create,t}function ke(s,t,e,r){if(typeof s.setBigUint64=="function")return s.setBigUint64(t,e,r);const a=BigInt(32),i=BigInt(4294967295),o=Number(e>>a&i),n=Number(e&i),p=r?4:0,h=r?0:4;s.setUint32(t+p,o,r),s.setUint32(t+h,n,r)}class De extends Ie{constructor(t,e,r,a){super(),this.blockLen=t,this.outputLen=e,this.padOffset=r,this.isLE=a,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=At(this.buffer)}update(t){if(this.destroyed)throw new Error("instance is destroyed");const{view:e,buffer:r,blockLen:a,finished:i}=this;if(i)throw new Error("digest() was already called");t=Yt(t);const o=t.length;for(let n=0;n<o;){const p=Math.min(a-this.pos,o-n);if(p===a){const h=At(t);for(;a<=o-n;n+=a)this.process(h,n);continue}r.set(t.subarray(n,n+p),this.pos),this.pos+=p,n+=p,this.pos===a&&(this.process(e,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){if(this.destroyed)throw new Error("instance is destroyed");if(!(t instanceof Uint8Array)||t.length<this.outputLen)throw new Error("_Sha2: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0;const{buffer:e,view:r,blockLen:a,isLE:i}=this;let{pos:o}=this;e[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>a-o&&(this.process(r,0),o=0);for(let p=o;p<a;p++)e[p]=0;ke(r,a-8,BigInt(this.length*8),i),this.process(r,0);const n=At(t);this.get().forEach((p,h)=>n.setUint32(4*h,p,i))}digest(){const{buffer:t,outputLen:e}=this;this.digestInto(t);const r=t.slice(0,e);return this.destroy(),r}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:e,buffer:r,length:a,finished:i,destroyed:o,pos:n}=this;return t.length=a,t.pos=n,t.finished=i,t.destroyed=o,a%e&&t.buffer.set(r),t}}const ot=BigInt(2**32-1),Lt=BigInt(32);function _e(s,t=!1){return t?{h:Number(s&ot),l:Number(s>>Lt&ot)}:{h:Number(s>>Lt&ot)|0,l:Number(s&ot)|0}}function Le(s,t=!1){let e=new Uint32Array(s.length),r=new Uint32Array(s.length);for(let a=0;a<s.length;a++){const{h:i,l:o}=_e(s[a],t);[e[a],r[a]]=[i,o]}return[e,r]}const Tt=(s,t,e)=>s>>>e,Mt=(s,t,e)=>s<<32-e|t>>>e,J=(s,t,e)=>s>>>e|t<<32-e,K=(s,t,e)=>s<<32-e|t>>>e,nt=(s,t,e)=>s<<64-e|t>>>e-32,ct=(s,t,e)=>s>>>e-32|t<<64-e;function _(s,t,e,r){const a=(t>>>0)+(r>>>0);return{h:s+e+(a/2**32|0)|0,l:a|0}}const Te=(s,t,e)=>(s>>>0)+(t>>>0)+(e>>>0),Me=(s,t,e,r)=>t+e+r+(s/2**32|0)|0,$e=(s,t,e,r)=>(s>>>0)+(t>>>0)+(e>>>0)+(r>>>0),ze=(s,t,e,r,a)=>t+e+r+a+(s/2**32|0)|0,Ve=(s,t,e,r,a)=>(s>>>0)+(t>>>0)+(e>>>0)+(r>>>0)+(a>>>0),He=(s,t,e,r,a,i)=>t+e+r+a+i+(s/2**32|0)|0,[Je,Ke]=Le(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(s=>BigInt(s))),$=new Uint32Array(80),z=new Uint32Array(80);class Ut extends De{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:t,Al:e,Bh:r,Bl:a,Ch:i,Cl:o,Dh:n,Dl:p,Eh:h,El:u,Fh:l,Fl:d,Gh:f,Gl:m,Hh:g,Hl:x}=this;return[t,e,r,a,i,o,n,p,h,u,l,d,f,m,g,x]}set(t,e,r,a,i,o,n,p,h,u,l,d,f,m,g,x){this.Ah=t|0,this.Al=e|0,this.Bh=r|0,this.Bl=a|0,this.Ch=i|0,this.Cl=o|0,this.Dh=n|0,this.Dl=p|0,this.Eh=h|0,this.El=u|0,this.Fh=l|0,this.Fl=d|0,this.Gh=f|0,this.Gl=m|0,this.Hh=g|0,this.Hl=x|0}process(t,e){for(let w=0;w<16;w++,e+=4)$[w]=t.getUint32(e),z[w]=t.getUint32(e+=4);for(let w=16;w<80;w++){const O=$[w-15]|0,N=z[w-15]|0,ft=J(O,N,1)^J(O,N,8)^Tt(O,N,7),vt=K(O,N,1)^K(O,N,8)^Mt(O,N,7),k=$[w-2]|0,D=z[w-2]|0,rt=J(k,D,19)^nt(k,D,61)^Tt(k,D,6),gt=K(k,D,19)^ct(k,D,61)^Mt(k,D,6),at=$e(vt,gt,z[w-7],z[w-16]),yt=ze(at,ft,rt,$[w-7],$[w-16]);$[w]=yt|0,z[w]=at|0}let{Ah:r,Al:a,Bh:i,Bl:o,Ch:n,Cl:p,Dh:h,Dl:u,Eh:l,El:d,Fh:f,Fl:m,Gh:g,Gl:x,Hh:j,Hl:F}=this;for(let w=0;w<80;w++){const O=J(l,d,14)^J(l,d,18)^nt(l,d,41),N=K(l,d,14)^K(l,d,18)^ct(l,d,41),ft=l&f^~l&g,vt=d&m^~d&x,k=Ve(F,N,vt,Ke[w],z[w]),D=He(k,j,O,ft,Je[w],$[w]),rt=k|0,gt=J(r,a,28)^nt(r,a,34)^nt(r,a,39),at=K(r,a,28)^ct(r,a,34)^ct(r,a,39),yt=r&i^r&n^i&n,ne=a&o^a&p^o&p;j=g|0,F=x|0,g=f|0,x=m|0,f=l|0,m=d|0,{h:l,l:d}=_(h|0,u|0,D|0,rt|0),h=n|0,u=p|0,n=i|0,p=o|0,i=r|0,o=a|0;const It=Te(rt,at,ne);r=Me(It,D,gt,yt),a=It|0}({h:r,l:a}=_(this.Ah|0,this.Al|0,r|0,a|0)),{h:i,l:o}=_(this.Bh|0,this.Bl|0,i|0,o|0),{h:n,l:p}=_(this.Ch|0,this.Cl|0,n|0,p|0),{h,l:u}=_(this.Dh|0,this.Dl|0,h|0,u|0),{h:l,l:d}=_(this.Eh|0,this.El|0,l|0,d|0),{h:f,l:m}=_(this.Fh|0,this.Fl|0,f|0,m|0),{h:g,l:x}=_(this.Gh|0,this.Gl|0,g|0,x|0),{h:j,l:F}=_(this.Hh|0,this.Hl|0,j|0,F|0),this.set(r,a,i,o,n,p,h,u,l,d,f,m,g,x,j,F)}roundClean(){$.fill(0),z.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Ge extends Ut{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class We extends Ut{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const qe=Bt(()=>new Ut);Bt(()=>new Ge);Bt(()=>new We);var Xt=(s=>(s.ATOMIC_URL="https://atomicdata.dev/datatypes/atomicURL",s.BOOLEAN="https://atomicdata.dev/datatypes/boolean",s.DATE="https://atomicdata.dev/datatypes/date",s.FLOAT="https://atomicdata.dev/datatypes/float",s.INTEGER="https://atomicdata.dev/datatypes/integer",s.MARKDOWN="https://atomicdata.dev/datatypes/markdown",s.RESOURCEARRAY="https://atomicdata.dev/datatypes/resourceArray",s.SLUG="https://atomicdata.dev/datatypes/slug",s.STRING="https://atomicdata.dev/datatypes/string",s.TIMESTAMP="https://atomicdata.dev/datatypes/timestamp",s.UNKNOWN="unknown-datatype",s))(Xt||{});new Set(Object.values(Xt));const Ze=/^[a-z0-9]+(?:-[a-z0-9]+)*$/,Qe=/^\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/,Ye=(s,t)=>{let e=null;if(s===void 0)throw new Error(`Value is undefined, expected ${t}`);switch(t){case"https://atomicdata.dev/datatypes/string":{if(!q(s)){e="Not a string";break}break}case"https://atomicdata.dev/datatypes/markdown":{if(!q(s)){e="Not a string";break}break}case"https://atomicdata.dev/datatypes/slug":{if(!q(s)){e="Not a slug, not even a string";break}s.match(Ze)===null&&(e="Not a valid slug. Only lowercase letters and numbers with dashes `-` between them");break}case"https://atomicdata.dev/datatypes/atomicURL":{if(!q(s)){e="Not a string. Should be a URL";break}T.tryValidSubject(s);break}case"https://atomicdata.dev/datatypes/resourceArray":{if(!Ft(s)){e="Not an array";break}s.map((r,a)=>{try{T.tryValidSubject(r)}catch{const i=new Error("Invalid URL");throw i.index=a,i}});break}case"https://atomicdata.dev/datatypes/integer":{if(!te(s)){e="Not a number";break}s%1!==0&&(e="Not an integer");break}case"https://atomicdata.dev/datatypes/date":{if(!q(s)){e="Not a string";break}s.match(Qe)===null&&(e="Not a date string: YYYY-MM-DD");break}}if(e!==null)throw new Error(e)};function Ft(s){return Object.prototype.toString.call(s)==="[object Array]"}function q(s){return typeof s=="string"}function te(s){return typeof s=="number"}var Q=(s=>(s.Unauthorized="Unauthorized",s.NotFound="NotFound",s.Server="Server",s.Client="Client",s))(Q||{});function Xe(s){return!!(s instanceof P&&(s.type==="Unauthorized"||s.message.includes("Unauthorized")))}class P extends Error{constructor(t,e="Client"){super(t),Object.setPrototypeOf(this,P.prototype),this.type=e,this.message=t;try{const r=JSON.parse(t)[U.properties.description];r&&(this.message=r)}catch{}this.message||(this.message=this.createMessage())}static fromResource(t){return new P(t.get(U.properties.description).toString())}createMessage(){switch(this.type){case"Unauthorized":return"You don't have the rights to do this.";case"NotFound":return"404 Not found.";case"Server":return"500 Unknown server error.";default:return"Unknown error."}}}class ts{constructor(){this.subscriptions=new Map}register(t,e){const r=this.subscriptions.get(t)??new Set;return r.add(e),this.subscriptions.set(t,r),()=>{r.delete(e)}}async emit(t,...e){if(!this.subscriptions.has(t))return;const r=this.subscriptions.get(t),a=async i=>i(...e);r&&await Promise.allSettled([...r].map(i=>a(i)))}hasSubscriptions(t){return this.subscriptions.has(t)}}class Ot{constructor(t,e,r,a=!1){this.__internalObject=this,this.pages=new Map,this._totalMembers=0,this.store=t,this.server=e,this.params=r,a||(this._waitForReady=this.fetchPage(0)),this.clearPages=this.clearPages.bind(this)}get property(){return this.params.property}get value(){return this.params.value}get sortBy(){return this.params.sort_by}get sortDesc(){return!!this.params.sort_desc}get pageSize(){return parseInt(this.params.page_size,10)}get totalMembers(){return this._totalMembers}get totalPages(){return Math.ceil(this.totalMembers/this.pageSize)}waitForReady(){return this._waitForReady}async getMemberWithIndex(t){if(t>=this.totalMembers)throw new Error("Index out of bounds");const e=Math.floor(t/this.pageSize);return this.pages.has(e)||(this._waitForReady=this.fetchPage(e),await this._waitForReady),this.pages.get(e).getSubjects(Jt.properties.members)[t%this.pageSize]}clearPages(){this.pages=new Map}async refresh(){return this.clearPages(),this._waitForReady=this.fetchPage(0),this._waitForReady}clone(){const t=new Ot(this.store,this.server,this.params);return t._totalMembers=this._totalMembers,t._waitForReady=this._waitForReady,t.pages=this.pages,t}async*[Symbol.asyncIterator](){await this.waitForReady();for(let t=0;t<this.totalMembers;t++){const e=await this.getMemberWithIndex(t);e!==void 0&&(yield e)}}async getAllMembers(){const t=[];for await(const e of this)t.push(e);return t}async getMembersOnPage(t){return this.pages.has(t)||await this.fetchPage(t),(this.pages.get(t).props.members??[]).filter(e=>e!==void 0)}buildSubject(t){const e=new URL(`${this.server}/query`);for(const[r,a]of Object.entries(this.params))e.searchParams.set(r,a);return e.searchParams.set("current_page",`${t}`),e.toString()}async fetchPage(t){const e=this.buildSubject(t),r=await this.store.fetchResourceFromServer(e);if(!r)throw new Error("Invalid collection: resource does not exist");if(r.error)throw new Error(`Invalid collection: resource has error: ${r.error}`);this.pages.set(t,r);const a=r.props.totalMembers;if(!te(a))throw new Error("Invalid collection: total-members is not a number");this._totalMembers=a}}class es{constructor(t,e){this.params={page_size:"30"},this.store=t,this.server=e??new URL(t.getServerUrl()).origin}setProperty(t){return this.params.property=t,this}setValue(t){return this.params.value=t,this}setSortBy(t){return this.params.sort_by=t,this}setSortDesc(t){return this.params.sort_desc=t,this}setPageSize(t){return this.params.page_size=`${t}`,this}build(){return new Ot(this.store,this.server,this.params)}async buildAndFetch(){const t=this.build();return await t.waitForReady(),t}}const ss={agent:"https://atomicdata.dev/classes/Agent",chatRoom:"https://atomicdata.dev/classes/ChatRoom",collection:"https://atomicdata.dev/classes/Collection",commit:"https://atomicdata.dev/classes/Commit",class:"https://atomicdata.dev/classes/Class",document:"https://atomicdata.dev/classes/Document",bookmark:"https://atomicdata.dev/class/Bookmark",elements:{paragraph:"https://atomicdata.dev/classes/elements/Paragraph"},error:"https://atomicdata.dev/classes/Error",property:"https://atomicdata.dev/classes/Property",datatype:"https://atomicdata.dev/classes/Datatype",endpoint:"https://atomicdata.dev/classes/Endpoint",drive:"https://atomicdata.dev/classes/Drive",redirect:"https://atomicdata.dev/classes/Redirect",invite:"https://atomicdata.dev/classes/Invite",file:"https://atomicdata.dev/classes/File",message:"https://atomicdata.dev/classes/Message",importer:"https://atomicdata.dev/classes/Importer",folder:"https://atomicdata.dev/classes/Folder",article:"https://atomicdata.dev/classes/Article",displayStyle:"https://atomicdata.dev/class/DisplayStyle",displayStyles:{grid:"https://atomicdata.dev/display-style/grid",list:"https://atomicdata.dev/display-style/list"},dateFormat:"https://atomicdata.dev/classes/DateFormat",numberFormat:"https://atomicdata.dev/classes/NumberFormat",constraintProperties:{rangeProperty:"https://atomicdata.dev/classes/RangeProperty",floatRangeProperty:"https://atomicdata.dev/classes/FloatRangeProperty",formattedNumber:"https://atomicdata.dev/classes/FormattedNumber",selectProperty:"https://atomicdata.dev/classes/SelectProperty",formattedDate:"https://atomicdata.dev/classes/FormattedDate"},table:"https://atomicdata.dev/classes/Table",tag:"https://atomicdata.dev/classes/Tag",ontology:"https://atomicdata.dev/class/ontology"},B={allowsOnly:"https://atomicdata.dev/properties/allowsOnly",getAll:"https://atomicdata.dev/properties/?page_size=999",children:"https://atomicdata.dev/properties/children",classType:"https://atomicdata.dev/properties/classtype",createdBy:"https://atomicdata.dev/properties/createdBy",datatype:"https://atomicdata.dev/properties/datatype",description:"https://atomicdata.dev/properties/description",drives:"https://atomicdata.dev/properties/drives",incomplete:"https://atomicdata.dev/properties/incomplete",isA:"https://atomicdata.dev/properties/isA",isDynamic:"https://atomicdata.dev/properties/isDynamic",name:"https://atomicdata.dev/properties/name",parent:"https://atomicdata.dev/properties/parent",paymentPointer:"https://atomicdata.dev/properties/paymentPointer",read:"https://atomicdata.dev/properties/read",recommends:"https://atomicdata.dev/properties/recommends",requires:"https://atomicdata.dev/properties/requires",shortname:"https://atomicdata.dev/properties/shortname",subResources:"https://atomicdata.dev/properties/subresources",write:"https://atomicdata.dev/properties/write",displayStyle:"https://atomicdata.dev/property/display-style",publishedAt:"https://atomicdata.dev/properties/published-at",agent:{publicKey:"https://atomicdata.dev/properties/publicKey"},collection:{members:"https://atomicdata.dev/properties/collection/members",currentPage:"https://atomicdata.dev/properties/collection/currentPage",pageSize:"https://atomicdata.dev/properties/collection/pageSize",property:"https://atomicdata.dev/properties/collection/property",totalMembers:"https://atomicdata.dev/properties/collection/totalMembers",totalPages:"https://atomicdata.dev/properties/collection/totalPages",value:"https://atomicdata.dev/properties/collection/value"},commit:{subject:"https://atomicdata.dev/properties/subject",createdAt:"https://atomicdata.dev/properties/createdAt",lastCommit:"https://atomicdata.dev/properties/lastCommit",previousCommit:"https://atomicdata.dev/properties/previousCommit",signer:"https://atomicdata.dev/properties/signer",set:"https://atomicdata.dev/properties/set",push:"https://atomicdata.dev/properties/push",remove:"https://atomicdata.dev/properties/remove",destroy:"https://atomicdata.dev/properties/destroy",signature:"https://atomicdata.dev/properties/signature"},document:{elements:"https://atomicdata.dev/properties/documents/elements"},endpoint:{parameters:"https://atomicdata.dev/properties/endpoint/parameters",results:"https://atomicdata.dev/properties/endpoint/results"},search:{query:"https://atomicdata.dev/properties/search/query",limit:"https://atomicdata.dev/properties/search/limit",property:"https://atomicdata.dev/properties/search/property"},redirect:{destination:"https://atomicdata.dev/properties/destination",redirectAgent:"https://atomicdata.dev/properties/invite/redirectAgent"},invite:{agent:"https://atomicdata.dev/properties/invite/agent",publicKey:"https://atomicdata.dev/properties/invite/publicKey",target:"https://atomicdata.dev/properties/invite/target",usagesLeft:"https://atomicdata.dev/properties/invite/usagesLeft",users:"https://atomicdata.dev/properties/invite/users",write:"https://atomicdata.dev/properties/invite/write"},file:{filename:"https://atomicdata.dev/properties/filename",filesize:"https://atomicdata.dev/properties/filesize",downloadUrl:"https://atomicdata.dev/properties/downloadURL",mimetype:"https://atomicdata.dev/properties/mimetype",attachments:"https://atomicdata.dev/properties/attachments"},chatRoom:{messages:"https://atomicdata.dev/properties/messages",nextPage:"https://atomicdata.dev/properties/nextPage",replyTo:"https://atomicdata.dev/properties/replyTo"},bookmark:{url:"https://atomicdata.dev/property/url",preview:"https://atomicdata.dev/property/preview",imageUrl:"https://atomicdata.dev/properties/imageUrl"},constraints:{max:"https://atomicdata.dev/properties/max",min:"https://atomicdata.dev/properties/min",maxFloat:"https://atomicdata.dev/properties/maxFloat",minFloat:"https://atomicdata.dev/properties/minFloat",numberFormatting:"https://atomicdata.dev/properties/numberFormatting",decimalPlaces:"https://atomicdata.dev/properties/decimalPlaces",dateFormat:"https://atomicdata.dev/properties/dateFormat"},table:{tableColumnWidths:"https://atomicdata.dev/properties/tableColumnWidths"},ontology:{customNodePositioning:"https://atomicdata.dev/properties/custom-node-positioning"},color:"https://atomicdata.dev/properties/color",emoji:"https://atomicdata.dev/properties/emoji",classes:"https://atomicdata.dev/properties/classes",properties:"https://atomicdata.dev/properties/properties",instances:"https://atomicdata.dev/properties/instances"},rs={atomicUrl:"https://atomicdata.dev/datatypes/atomicURL",boolean:"https://atomicdata.dev/datatypes/boolean",date:"https://atomicdata.dev/datatypes/date",float:"https://atomicdata.dev/datatypes/float",integer:"https://atomicdata.dev/datatypes/integer",markdown:"https://atomicdata.dev/datatypes/markdown",resourceArray:"https://atomicdata.dev/datatypes/resourceArray",slug:"https://atomicdata.dev/datatypes/slug",string:"https://atomicdata.dev/datatypes/string",timestamp:"https://atomicdata.dev/datatypes/timestamp"},ee={publicAgent:"https://atomicdata.dev/agents/publicAgent",displayStyleGrid:"https://atomicdata.dev/agents/publicAgent",numberFormats:{number:"https://atomicdata.dev/classes/NumberFormat/number",percentage:"https://atomicdata.dev/classes/NumberFormat/Percentage",currency:"https://atomicdata.dev/ontology/data-browser/number-format/vAikhI3z"},dateFormats:{localNumeric:"https://atomicdata.dev/classes/DateFormat/localNumeric",localLong:"https://atomicdata.dev/classes/DateFormat/localLong",localRelative:"https://atomicdata.dev/classes/DateFormat/localRelative"}},as={import:"/import"},y={properties:B,endpoints:as,classes:ss,datatypes:rs,instances:ee};function St(s){if(s===void 0)throw new Error(`Not an array: ${s}, is ${typeof s}`);if(s.constructor===Array)return s;throw new Error(`Not an array: ${s}, is a ${typeof s}`)}const $t="unknown-subject";class et{constructor(t,e){if(this.loading=!1,this.appliedCommitSignatures=new Set,this.__internalObject=this,this.propvals=new Map,this.hasQueue=!1,this.eventManager=new ts,typeof t!="string")throw new Error("Invalid subject given to resource, must be a string, found "+typeof t);this.new=!!e,this._subject=t,this.commitBuilder=new X(t)}get subject(){return this._subject}get title(){return this.get(U.properties.name)??this.get(U.properties.shortname)??this.get(Pt.properties.filename)??this.subject}get props(){const t={};for(const e of this.propvals.keys()){const r=de(e);r&&(t[r]=this.get(e))}return t}get store(){if(!this._store)throw console.error(`Resource ${this.title} has no store`),new Error("Resource has no store");return this._store}on(t,e){return this.eventManager.register(t,e)}setStore(t){this._store=t}equals(t){return this===t.__internalObject?!0:!(this.subject!==t.subject||this.new!==t.new||this.error!==t.error||this.loading!==t.loading||JSON.stringify(Array.from(this.propvals.entries()))!==JSON.stringify(Array.from(t.propvals.entries()))||JSON.stringify(Array.from(this.commitBuilder.set.entries()))!==JSON.stringify(Array.from(t.commitBuilder.set.entries())))}async canWrite(t,e){const r=this.get(B.write);if(!t)return[!1,"No agent given"];if(r&&St(r).includes(t))return[!0,void 0];if(r&&St(r).includes(ee.publicAgent))return[!0,void 0];const a=this.get(B.parent);return a?a===t?[!0,void 0]:e===a?(console.warn("Circular parent",e),[!0,`Circular parent in ${this.subject}`]):await(await this.store.getResource(a)).canWrite(t,this.subject):[!1,`No write right or parent in ${this.subject}`]}clone(){const t=new et(this.subject);return t.propvals=structuredClone(this.propvals),t.loading=this.loading,t.new=this.new,t.error=structuredClone(this.error),t.commitError=this.commitError,t.commitBuilder=this.commitBuilder.clone(),t.appliedCommitSignatures=this.appliedCommitSignatures,t}isReady(){return!this.loading&&this.error===void 0}get(t){return this.propvals.get(t)}getSubjects(t){return this.getArray(t).map(e=>typeof e=="string"?e:e["@id"])}getArray(t){const e=this.propvals.get(t)??[];return St(e)}getClasses(){return this.getSubjects(U.properties.isA)}hasClasses(...t){return t.every(e=>this.getClasses().includes(e))}matchClass(t,e){for(const[r,a]of Object.entries(t))if(this.hasClasses(r))return a;return e}removeClasses(...t){this.set(U.properties.isA,this.getClasses().filter(e=>!t.includes(e)),!1)}addClasses(...t){const e=new Set([...this.getClasses(),...t]);return this.set(U.properties.isA,Array.from(e))}hasUnsavedChanges(){return this.commitBuilder.hasUnsavedChanges()}getCommitsCollectionSubject(){const t=new URL(this.subject);return t.pathname="/commits",t.searchParams.append("property",y.properties.commit.subject),t.searchParams.append("value",this.subject),t.searchParams.append("sort_by",y.properties.commit.createdAt),t.searchParams.append("include_nested","true"),t.searchParams.append("page_size","9999"),t.toString()}async getChildrenCollection(t=100){return await new es(this.store).setPageSize(t).setProperty(U.properties.parent).setValue(this.subject).buildAndFetch()}async getHistory(t){const e=(await this.store.fetchResourceFromServer(this.getCommitsCollectionSubject())).get(B.collection.members),r=[];let a=new et(this.subject);for(let i=0;i<e.length;i++){const o=await this.store.getResource(e[i]),n=ns(o),p=ps(a.clone(),n);r.push({commit:n,resource:p}),a=p,t&&i%30===0&&(t(Math.round(i/e.length*100)),await is())}return r}async setVersion(t){const e=t.resource.getPropVals();for(const r of this.propvals.keys())e.has(r)||this.remove(r);for(const[r,a]of e.entries())await this.set(r,a);await this.save()}getSubject(){return this.subject}getSubjectNoParams(){const t=new URL(this.subject);return t.origin+t.pathname}getPropVals(){return this.propvals}async getRights(){const t=[];this.getSubjects(B.write).forEach(r=>{t.push({for:r,type:"write",setIn:this.subject})}),this.getSubjects(B.read).forEach(r=>{t.push({for:r,type:"read",setIn:this.subject})});const e=this.get(B.parent);if(e){if(e===this.subject)return console.warn("Circular parent",e),t;const r=await(await this.store.getResource(e)).getRights();t.push(...r)}return t}isUnauthorized(){return!!this.error&&Xe(this.error)}async destroy(t){if(this.new){this.store.removeResource(this.subject);return}const e=new X(this.subject);if(e.setDestroy(!0),t===void 0&&(t=this.store.getAgent()),(t==null?void 0:t.subject)===void 0)throw new Error("No agent has been set or passed, you cannot delete this.");const r=await e.sign(t.privateKey,t.subject),a=new URL(this.subject).origin+"/commit";await this.store.postCommit(r,a),this.store.removeResource(this.subject)}pushPropVal(t,e,r){this.push(t,e,r)}push(t,e,r){const a=this.get(t)??[];r&&(e=e.filter(i=>!a.includes(i)).filter(i=>{var o;return!((o=this.commitBuilder.push[t])!=null&&o.includes(i))}).filter((i,o,n)=>n.indexOf(i)===o)),this.commitBuilder.addPushAction(t,...e),this.propvals.set(t,[...a,...e])}removePropVal(t){this.remove(t)}remove(t){this.propvals.delete(t),this.commitBuilder.addRemoveAction(t)}removePropValLocally(t){this.propvals.delete(t)}async save(t){var e,r;if(!this.commitBuilder.hasUnsavedChanges()){console.warn(`No changes to ${this.subject}, not saving`);return}const a=this.store.getAgent()??t;if(!a)throw new Error("No agent has been set or passed, you cannot save.");if(this.hasQueue)return;if(this.isParentNew()){this.store.batchResource(this.subject);return}if(this.inProgressCommit)return this.hasQueue=!0,await this.inProgressCommit,this.hasQueue=!1,this.inProgressCommit=void 0,this.save(t);const i=(e=this.get(B.commit.lastCommit))==null?void 0:e.toString();i&&this.commitBuilder.setPreviousCommit(i);const o=this.new;let n=()=>{};this.inProgressCommit=new Promise(l=>{n=()=>{l()}});const p=this.commitBuilder.clone();this.commitBuilder=new X(this.subject);const h=await p.sign(a.privateKey,a.subject);this.appliedCommitSignatures.add(h.signature),this.loading=!1,this.new=!1;const u=new URL(this.subject).origin+"/commit";try{this.commitError=void 0,this.store.addResources(this,{skipCommitCompare:!0});const l=await this.store.postCommit(h,u);return this.setUnsafe(B.commit.lastCommit,l.id),this.store.notifyResourceSaved(this),o&&(this.store.subscribeWebSocket(this.subject),await this.store.saveBatchForParent(this.subject)),n(),l.id}catch(l){if(l.message.includes("previousCommit")){console.warn("previousCommit missing or mismatch, retrying...");const d=(r=(await this.store.fetchResourceFromServer(this.subject)).get(B.commit.lastCommit))==null?void 0:r.toString();return d&&this.setUnsafe(B.commit.lastCommit,d),n(),await this.save(a)}throw this.commitBuilder=p,this.commitError=l,this.store.addResources(this,{skipCommitCompare:!0}),n(),l}}async set(t,e,r=!0){if(this.store.isOffline()&&r&&(console.warn("Offline, not validating"),r=!1),r){const a=await this.store.getProperty(t);try{Ye(e,a.datatype)}catch(i){throw i instanceof Error&&(i.message=`Error validating ${a.shortname} with value ${e} for ${this.subject}: ${i.message}`),i}}if(e===void 0){this.remove(t),this.eventManager.emit("local-change",t,e);return}this.propvals.set(t,e),this.commitBuilder.addSetAction(t,e),this.eventManager.emit("local-change",t,e)}setUnsafe(t,e){this.propvals.set(t,e)}setError(t){this.error=t}setSubject(t){T.tryValidSubject(t),this.commitBuilder.setSubject(t),this._subject=t}async refresh(){await this.store.fetchResourceFromServer(this.subject,{noWebSocket:!0})}isParentNew(){const t=this.propvals.get(U.properties.parent);return t?this.store.getResourceLoading(t).new:!1}}const is=()=>new Promise(s=>setTimeout(s));class ht{constructor(){this.parsedResources=[]}parseObject(t,e){return this.parsedResources=[],[this.parseJsonADResource(t,e),[...this.parsedResources]]}parseArray(t){return this.parsedResources=[],[this.parseJsonADArray(t),[...this.parsedResources]]}parseValue(t,e){return this.parsedResources=[],[this.parseJsonAdResourceValue(t,e),[...this.parsedResources]]}parseJsonADResource(t,e=$t){const r=new et(e);this.parsedResources.push(r);try{for(const[a,i]of Object.entries(t)){if(a==="@id"){if(typeof i!="string")throw new Error("'@id' field must be a string");if(r.subject!=="undefined"&&r.subject!==$t&&i!==r.subject)throw new Error(`Resource has wrong subject in @id. Received subject was ${i}, expected ${r.subject}.`);r.setSubject(i);continue}try{if(Ft(i)){const o=i.map(n=>this.parseJsonAdResourceValue(n,a));r.setUnsafe(a,o)}else if(typeof i=="string")r.setUnsafe(a,i);else if(typeof i=="number")r.setUnsafe(a,i);else if(typeof i=="boolean")r.setUnsafe(a,i);else{const o=this.parseJsonAdResourceValue(i,a);r.setUnsafe(a,o)}}catch(o){const n=`${`Failed creating value ${i} for key ${a} in resource ${r.subject}`}. ${o.message}`;throw new Error(n)}}r.loading=!1,r.hasClasses(Pt.classes.error)&&(r.error=P.fromResource(r))}catch(a){throw a.message="Failed parsing JSON "+a.message,r.setError(a),r.loading=!1,a}return r}parseJsonAdResourceValue(t,e){if(typeof t=="string")return t;if((t==null?void 0:t.constructor)==={}.constructor)if(Object.keys(t).includes("@id")){const r=t["@id"];return this.parseJsonADResource(t),r}else return t;throw new Error(`Value ${t} in ${e} not a string or a nested Resource`)}parseJsonADArray(t){const e=[];try{for(const r of t){const a=this.parseJsonADResource(r);e.push(a)}}catch(r){throw r.message="Failed parsing JSON "+r.message,r}return e}}mt.sha512=s=>Promise.resolve(qe(s));function Nt(){return Math.round(new Date().getTime())}class X{constructor(t,e={}){this._subject=T.removeQueryParamsFromURL(t),this._set=e.set??new Map,this._push=e.push??new Map,this._remove=e.remove??new Set,this._destroy=e.destroy,this._previousCommit=e.previousCommit}get subject(){return this._subject}get set(){return this._set}get push(){return this._push}get remove(){return this._remove}get destroy(){return this._destroy}get previousCommit(){return this._previousCommit}addSetAction(t,e){return this.removeRemoveAction(t),this._set.set(t,e),this}addPushAction(t,...e){const r=this._push.get(t)??new Set;for(const a of e)r.add(a);return this._push.set(t,r),this}addRemoveAction(t){return this._set.delete(t),this._push.delete(t),this._remove.add(t),this}removeRemoveAction(t){return this._remove.delete(t),this}setDestroy(t){return this._destroy=t,this}setPreviousCommit(t){return this._previousCommit=t,this}setSubject(t){return this._subject=t,this}async sign(t,e){return await this.signAt(e,t,Nt())}hasUnsavedChanges(){return this.set.size>0||this.push.size>0||this.destroy||this.remove.size>0}clone(){const t={set:this.set,push:this.push,remove:this.remove,destroy:this.destroy,previousCommit:this.previousCommit};return new X(this.subject,structuredClone(t))}toPlainObject(){return{subject:this.subject,set:Object.fromEntries(this.set.entries()),push:Object.fromEntries(Array.from(this.push.entries()).map(([t,e])=>[t,Array.from(e)])),remove:Array.from(this.remove),destroy:this.destroy,previousCommit:this.previousCommit}}async signAt(t,e,r){if(t===void 0)throw new Error("No agent passed to sign commit");if(!this.hasUnsavedChanges())throw new Error(`No changes to commit in ${this.subject}`);const a={...this.clone().toPlainObject(),createdAt:r,signer:t},i=se({...a}),o=await re(i,e);return{...a,signature:o}}}function L(s,t,e){t in s&&t!==e&&(Object.defineProperty(s,e,Object.getOwnPropertyDescriptor(s,t)),delete s[t])}function se(s){return s.remove&&Object.keys(s.remove).length===0&&delete s.remove,s.set&&Object.keys(s.set).length===0&&delete s.set,s.push&&Object.keys(s.push).length===0&&delete s.push,s.destroy===!1&&delete s.destroy,L(s,"createdAt",y.properties.commit.createdAt),L(s,"subject",y.properties.commit.subject),L(s,"set",y.properties.commit.set),L(s,"push",y.properties.commit.push),L(s,"signer",y.properties.commit.signer),L(s,"signature",y.properties.commit.signature),L(s,"remove",y.properties.commit.remove),L(s,"destroy",y.properties.commit.destroy),L(s,"previousCommit",y.properties.commit.previousCommit),s[y.properties.isA]=[y.classes.commit],Fe(s)}const re=async(s,t)=>{const e=Qt(t),r=new Uint8Array(e),a=new TextEncoder().encode(s),i=await Ce(a,r);return Zt(i)},os=async s=>{const t=Qt(s),e=new Uint8Array(t),r=await je(e);return Zt(r)};function ns(s){return{id:s.getSubject(),subject:s.get(y.properties.commit.subject),set:s.get(y.properties.commit.set),push:s.get(y.properties.commit.push),signer:s.get(y.properties.commit.signer),createdAt:s.get(y.properties.commit.createdAt),remove:s.get(y.properties.commit.remove),destroy:s.get(y.properties.commit.destroy),signature:s.get(y.properties.commit.signature)}}function cs(s){try{const t=JSON.parse(s);if(typeof t!="object")throw new Error("Commit is not an object");const e=t[y.properties.commit.subject],r=t[y.properties.commit.set],a=t[y.properties.commit.push],i=t[y.properties.commit.signer],o=t[y.properties.commit.createdAt],n=t[y.properties.commit.remove],p=t[y.properties.commit.destroy],h=t[y.properties.commit.signature],u=t["@id"],l=t[y.properties.commit.previousCommit];if(!h)throw new Error("Commit has no signature");return{subject:e,set:r,push:a,signer:i,createdAt:o,remove:n,destroy:p,signature:h,id:u,previousCommit:l}}catch(t){throw new Error(`Could not parse commit: ${t}, Commit: ${s}`)}}function ps(s,t){const{set:e,remove:r,push:a}=t;return e&&ds(e,s),r&&hs(r,s),a&&ls(a,s),s}function ds(s,t,e){const r=new ht,a=[];for(const[i,o]of Object.entries(s)){let n=o;if((o==null?void 0:o.constructor)==={}.constructor){const[p,h]=r.parseValue(o,i);n=p,a.push(...h)}Ft(o)&&(n=o.map(p=>{const[h,u]=r.parseValue(p,i);return a.push(...u),h})),t.setUnsafe(i,n)}}function hs(s,t){for(const e of s)t.removePropValLocally(e)}function ls(s,t,e){const r=new ht,a=[];for(const[i,o]of Object.entries(s)){const n=t.get(i)||[],p=o.map(u=>{const[l,d]=r.parseValue(u,i);return a.push(...d),l}),h=[...n,...p];t.setUnsafe(i,h)}}async function us(s,t){const e=Nt();if(!t.subject)throw new Error("Agent has no subject, cannot authenticate");return{"https://atomicdata.dev/properties/auth/agent":t.subject,"https://atomicdata.dev/properties/auth/requestedSubject":s,"https://atomicdata.dev/properties/auth/publicKey":await t.getPublicKey(),"https://atomicdata.dev/properties/auth/timestamp":e,"https://atomicdata.dev/properties/auth/signature":await ae(s,t,e)}}async function ae(s,t,e){const r=`${s} ${e}`;return await re(r,t.privateKey)}function ms(s,t){var e;return!s.startsWith("http://localhost")&&((e=t==null?void 0:t.subject)==null?void 0:e.startsWith("http://localhost"))}async function zt(s,t,e){const r=Nt();return t!=null&&t.subject&&!ms(s,t)&&(e["x-atomic-public-key"]=await t.getPublicKey(),e["x-atomic-signature"]=await ae(s,t,r),e["x-atomic-timestamp"]=r,e["x-atomic-agent"]=t==null?void 0:t.subject),e}const fs=24*60*60*1e3,vs=(s,t,e,r=fs)=>{const a=new Date(Date.now()+r).toUTCString(),i=encodeURIComponent(t),o=new URL(e).hostname,n=`${s}=${i};Expires=${a};Domain=${o};SameSite=Lax;path=/`;document.cookie=n},gs="atomic_session",ys=(s,t)=>{us(s,t).then(e=>{vs(gs,btoa(JSON.stringify(e)),s)})},bs=()=>{const s=document.cookie.match(/^(.*;)?\s*atomic_session\s*=\s*[^;]+(.*)?$/);return s?s.length>0:!1},ws=s=>"blob"in s&&"name"in s,xs="application/ad+json";class T{constructor(t){t&&this.setFetch(t)}static tryValidSubject(t){try{new URL(t)}catch(e){throw new Error(`Not a valid URL: ${t}. ${e}`)}}static isValidSubject(t){if(typeof t!="string")return!1;try{return T.tryValidSubject(t),!0}catch{return!1}}static removeQueryParamsFromURL(t){return t==null?void 0:t.split("?")[0]}setFetch(t){this.__fetchOverride=t.bind(globalThis)}async fetchResourceHTTP(t,e={}){const{signInfo:r,from:a,body:i,method:o}=e;let n=[];const p=new ht;let h=new et(t);try{T.tryValidSubject(t);const u={};u.Accept=xs,r&&(me()&&t.startsWith(window.location.origin)?bs()||ys(r.serverURL,r.agent):await zt(t,r.agent,u));let l=t;if(a!==void 0){const m=new URL(`${a}/path`);m.searchParams.set("path",t),l=m.href}const d=await this.fetch(l,{headers:u,method:o??"GET",body:i}),f=await d.text();if(d.status===200)try{const m=JSON.parse(f);if(e.noNested)h=m;else{const[g,x]=p.parseObject(m,t);h=g,n.push(...x)}}catch(m){throw new P(`Could not parse JSON from fetching ${t}. Is it an Atomic Data resource? Error message: ${m.message}`)}else throw d.status===401?new P(f,Q.Unauthorized):d.status===500?new P(f,Q.Server):d.status===404?new P(f,Q.NotFound):new P(f)}catch(u){h.setError(u),n=[h],console.error(t,u)}return h.loading=!1,{resource:h,createdResources:n}}async postCommit(t,e){const r=se({...t}),a=new Headers;a.set("Content-Type","application/ad+json");let i;try{i=await this.fetch(e,{headers:a,method:"POST",body:r})}catch(n){throw new P(`Posting Commit to ${e} failed: ${n}`)}const o=await i.text();if(i.status!==200)throw new P(o,Q.Server);return cs(o)}async uploadFiles(t,e,r,a){const i=new ht,o=new FormData;t.map(m=>{ws(m)?o.append("assets",m.blob,m.name):o.append("assets",m,m.name)});const n=new URL(`${e}/upload`);n.searchParams.set("parent",a);const p=await zt(n.toString(),r,{}),h={method:"POST",body:o,headers:p},u=await this.fetch(n.toString(),h),l=await u.text();if(u.status!==200)throw Error(l);const d=JSON.parse(l),[f]=i.parseArray(d);return f}fetch(...t){return this.__fetchOverride?this.__fetchOverride(...t):fetch(...t)}}class ie{constructor(t,e){if(e&&T.tryValidSubject(e),!t)throw new P("Agent requires a private key");this.client=new T,this.subject=e,this.privateKey=t}static fromSecret(t){const e=atob(t),r=JSON.parse(e),{privateKey:a,subject:i}=r;return new ie(a,i)}async getPublicKey(){if(!this.publicKey){const t=await os(this.privateKey);this.publicKey=t}return this.publicKey}buildSecret(){const t=JSON.stringify(this);return btoa(t)}async verifyPublicKeyWithServer(){var t;if(!this.subject)throw new P("Agent has no subject");const{resource:e}=await this.client.fetchResourceHTTP(this.subject);if(e.error)throw new Error(`Could not fetch agent, and could therefore not check validity of public key. ${e.error}`);if(((t=e.get(U.properties.publicKey))==null?void 0:t.toString())!==await this.getPublicKey())throw new Error("Fetched publickey does not match current one - is the private key correct?")}}ue();const As=ce(void 0),oe=Ht(void 0,s=>{As.subscribe(t=>{s(t)})}),Vt=(s,t,e,r)=>{e(s.getResourceLoading(t,r));const a=i=>{e(i)};return s.subscribe(t,a),()=>{s.unsubscribe(t,a)}},Es=(s,t)=>{const e=pt(oe),r=typeof s=="string"?s:pt(s);return Ht(e.getResourceLoading(r,t),i=>{if(typeof s!="string"){let o;const n=s.subscribe(p=>{o==null||o(),i(e.getResourceLoading(p,t)),o=Vt(e,p,i,t)});return()=>{n(),o==null||o()}}else return Vt(e,s,i,t)})},Rs=(s,t,e=!1)=>{const r=pt(oe);let a=pt(s),i=a.get(t);const o=new Set;let n=!1;const p=d=>{i=d.get(t),h()},h=()=>{for(const d of o)d(i)},u=async d=>{i=d,d===void 0?a.removePropVal(t):a.set(t,d,!1),e&&await a.save(),r.addResources(a)},l={set(d){u(d),h()},subscribe(d){return n||(r.subscribe(a.subject,p),n=!0),o.add(d),d(i),()=>{o.delete(d),o.size===0&&(r.unsubscribe(a.subject,p),n=!1)}},update(d){u(d(i)).then(()=>{h()})}};return s.subscribe(d=>{i=d.get(t),a=d,h()}),l};export{ie as A,Rs as a,y as b,Es as g,oe as s};
